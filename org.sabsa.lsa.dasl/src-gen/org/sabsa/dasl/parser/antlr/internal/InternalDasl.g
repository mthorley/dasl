/*
 * generated by Xtext 2.19.0
 */
grammar InternalDasl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.sabsa.dasl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.sabsa.dasl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.sabsa.dasl.services.DaslGrammarAccess;

}

@parser::members {

 	private DaslGrammarAccess grammarAccess;

    public InternalDaslParser(TokenStream input, DaslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SecurityModel";
   	}

   	@Override
   	protected DaslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSecurityModel
entryRuleSecurityModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSecurityModelRule()); }
	iv_ruleSecurityModel=ruleSecurityModel
	{ $current=$iv_ruleSecurityModel.current; }
	EOF;

// Rule SecurityModel
ruleSecurityModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSecurityModelAccess().getImportsImportParserRuleCall_0_0());
				}
				lv_imports_0_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSecurityModelRule());
					}
					add(
						$current,
						"imports",
						lv_imports_0_0,
						"org.sabsa.dasl.Dasl.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSecurityModelAccess().getMetadataMetadataParserRuleCall_1_0());
				}
				lv_metadata_1_0=ruleMetadata
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSecurityModelRule());
					}
					set(
						$current,
						"metadata",
						lv_metadata_1_0,
						"org.sabsa.dasl.Dasl.Metadata");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSecurityModelAccess().getElementsAbstractElementParserRuleCall_2_0());
				}
				lv_elements_2_0=ruleAbstractElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSecurityModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_2_0,
						"org.sabsa.dasl.Dasl.AbstractElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				lv_importURI_1_0=RULE_STRING
				{
					newLeafNode(lv_importURI_1_0, grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
					setWithLastConsumed(
						$current,
						"importURI",
						lv_importURI_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleMetadata
entryRuleMetadata returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMetadataRule()); }
	iv_ruleMetadata=ruleMetadata
	{ $current=$iv_ruleMetadata.current; }
	EOF;

// Rule Metadata
ruleMetadata returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMetadataAccess().getMetadataAction_0(),
					$current);
			}
		)
		otherlv_1='metadata'
		{
			newLeafNode(otherlv_1, grammarAccess.getMetadataAccess().getMetadataKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMetadataAccess().getKeysMetadataTypeEnumRuleCall_2_0());
				}
				lv_keys_2_0=ruleMetadataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMetadataRule());
					}
					add(
						$current,
						"keys",
						lv_keys_2_0,
						"org.sabsa.dasl.Dasl.MetadataType");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleZone
entryRuleZone returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getZoneRule()); }
	iv_ruleZone=ruleZone
	{ $current=$iv_ruleZone.current; }
	EOF;

// Rule Zone
ruleZone returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='zone'
		{
			newLeafNode(otherlv_0, grammarAccess.getZoneAccess().getZoneKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getZoneAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getZoneRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.sabsa.dasl.Dasl.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getZoneAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='trustLevel'
		{
			newLeafNode(otherlv_3, grammarAccess.getZoneAccess().getTrustLevelKeyword_3());
		}
		(
			(
				lv_trust_4_0=RULE_INT
				{
					newLeafNode(lv_trust_4_0, grammarAccess.getZoneAccess().getTrustINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getZoneRule());
					}
					setWithLastConsumed(
						$current,
						"trust",
						lv_trust_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='ingress'
		{
			newLeafNode(otherlv_5, grammarAccess.getZoneAccess().getIngressKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getZoneRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getZoneAccess().getIngressZonesZoneCrossReference_6_0());
				}
			)
		)*
		otherlv_7='egress'
		{
			newLeafNode(otherlv_7, grammarAccess.getZoneAccess().getEgressKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getZoneRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getZoneAccess().getEgressZonesZoneCrossReference_8_0());
				}
			)
		)*
		otherlv_9='nodes'
		{
			newLeafNode(otherlv_9, grammarAccess.getZoneAccess().getNodesKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getZoneRule());
					}
				}
				otherlv_10=RULE_ID
				{
					newLeafNode(otherlv_10, grammarAccess.getZoneAccess().getNodesNodeCrossReference_10_0());
				}
			)
		)*
		(
			otherlv_11='controls'
			{
				newLeafNode(otherlv_11, grammarAccess.getZoneAccess().getControlsKeyword_11_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getZoneRule());
						}
					}
					otherlv_12=RULE_ID
					{
						newLeafNode(otherlv_12, grammarAccess.getZoneAccess().getControlsControlCrossReference_11_1_0());
					}
				)
			)*
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getZoneAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	iv_ruleNode=ruleNode
	{ $current=$iv_ruleNode.current; }
	EOF;

// Rule Node
ruleNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='node'
		{
			newLeafNode(otherlv_0, grammarAccess.getNodeAccess().getNodeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.sabsa.dasl.Dasl.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getNodeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='ref'
		{
			newLeafNode(otherlv_3, grammarAccess.getNodeAccess().getRefKeyword_3());
		}
		(
			(
				lv_ref_4_0=RULE_ID
				{
					newLeafNode(lv_ref_4_0, grammarAccess.getNodeAccess().getRefIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"ref",
						lv_ref_4_0,
						"org.sabsa.dasl.Dasl.ID");
				}
			)
		)
		otherlv_5='host'
		{
			newLeafNode(otherlv_5, grammarAccess.getNodeAccess().getHostKeyword_5());
		}
		(
			(
				lv_host_6_0=RULE_STRING
				{
					newLeafNode(lv_host_6_0, grammarAccess.getNodeAccess().getHostSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"host",
						lv_host_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='os'
		{
			newLeafNode(otherlv_7, grammarAccess.getNodeAccess().getOsKeyword_7());
		}
		(
			(
				lv_os_8_0=RULE_STRING
				{
					newLeafNode(lv_os_8_0, grammarAccess.getNodeAccess().getOsSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"os",
						lv_os_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9='type'
		{
			newLeafNode(otherlv_9, grammarAccess.getNodeAccess().getTypeKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeAccess().getValueNodeTypeEnumRuleCall_10_0());
				}
				lv_value_10_0=ruleNodeType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeRule());
					}
					set(
						$current,
						"value",
						lv_value_10_0,
						"org.sabsa.dasl.Dasl.NodeType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11='components'
			{
				newLeafNode(otherlv_11, grammarAccess.getNodeAccess().getComponentsKeyword_11_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeRule());
						}
					}
					otherlv_12=RULE_ID
					{
						newLeafNode(otherlv_12, grammarAccess.getNodeAccess().getComponentsComponentCrossReference_11_1_0());
					}
				)
			)*
		)?
		(
			otherlv_13='controls'
			{
				newLeafNode(otherlv_13, grammarAccess.getNodeAccess().getControlsKeyword_12_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeRule());
						}
					}
					otherlv_14=RULE_ID
					{
						newLeafNode(otherlv_14, grammarAccess.getNodeAccess().getControlsControlCrossReference_12_1_0());
					}
				)
			)*
		)?
		(
			otherlv_15='assets'
			{
				newLeafNode(otherlv_15, grammarAccess.getNodeAccess().getAssetsKeyword_13_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getNodeAccess().getAssetsInformationAssetCrossReference_13_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getNodeAccess().getRightCurlyBracketKeyword_14());
		}
	)
;

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='component'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentAccess().getComponentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.sabsa.dasl.Dasl.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='ref'
		{
			newLeafNode(otherlv_3, grammarAccess.getComponentAccess().getRefKeyword_3());
		}
		(
			(
				lv_ref_4_0=RULE_ID
				{
					newLeafNode(lv_ref_4_0, grammarAccess.getComponentAccess().getRefIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"ref",
						lv_ref_4_0,
						"org.sabsa.dasl.Dasl.ID");
				}
			)
		)
		otherlv_5='stereotype'
		{
			newLeafNode(otherlv_5, grammarAccess.getComponentAccess().getStereotypeKeyword_5());
		}
		(
			(
				lv_stereotype_6_0=RULE_STRING
				{
					newLeafNode(lv_stereotype_6_0, grammarAccess.getComponentAccess().getStereotypeSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"stereotype",
						lv_stereotype_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_7='vendor'
			{
				newLeafNode(otherlv_7, grammarAccess.getComponentAccess().getVendorKeyword_7_0());
			}
			(
				(
					lv_vendor_8_0=RULE_STRING
					{
						newLeafNode(lv_vendor_8_0, grammarAccess.getComponentAccess().getVendorSTRINGTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComponentRule());
						}
						setWithLastConsumed(
							$current,
							"vendor",
							lv_vendor_8_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_9='desc'
		{
			newLeafNode(otherlv_9, grammarAccess.getComponentAccess().getDescKeyword_8());
		}
		(
			(
				lv_desc_10_0=RULE_STRING
				{
					newLeafNode(lv_desc_10_0, grammarAccess.getComponentAccess().getDescSTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"desc",
						lv_desc_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_11='version'
		{
			newLeafNode(otherlv_11, grammarAccess.getComponentAccess().getVersionKeyword_10());
		}
		(
			(
				lv_version_12_0=RULE_STRING
				{
					newLeafNode(lv_version_12_0, grammarAccess.getComponentAccess().getVersionSTRINGTerminalRuleCall_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"version",
						lv_version_12_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_13='assets'
			{
				newLeafNode(otherlv_13, grammarAccess.getComponentAccess().getAssetsKeyword_12_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComponentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getComponentAccess().getAssetsInformationAssetCrossReference_12_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_15='controls'
			{
				newLeafNode(otherlv_15, grammarAccess.getComponentAccess().getControlsKeyword_13_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComponentRule());
						}
					}
					otherlv_16=RULE_ID
					{
						newLeafNode(otherlv_16, grammarAccess.getComponentAccess().getControlsControlCrossReference_13_1_0());
					}
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentAccess().getComponentsComponentParserRuleCall_14_0());
				}
				lv_components_17_0=ruleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRule());
					}
					add(
						$current,
						"components",
						lv_components_17_0,
						"org.sabsa.dasl.Dasl.Component");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_15());
		}
	)
;

// Entry rule entryRuleInformationAsset
entryRuleInformationAsset returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInformationAssetRule()); }
	iv_ruleInformationAsset=ruleInformationAsset
	{ $current=$iv_ruleInformationAsset.current; }
	EOF;

// Rule InformationAsset
ruleInformationAsset returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='informationasset'
		{
			newLeafNode(otherlv_0, grammarAccess.getInformationAssetAccess().getInformationassetKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInformationAssetAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInformationAssetRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.sabsa.dasl.Dasl.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getInformationAssetAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='ref'
		{
			newLeafNode(otherlv_3, grammarAccess.getInformationAssetAccess().getRefKeyword_3());
		}
		(
			(
				lv_ref_4_0=RULE_ID
				{
					newLeafNode(lv_ref_4_0, grammarAccess.getInformationAssetAccess().getRefIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInformationAssetRule());
					}
					setWithLastConsumed(
						$current,
						"ref",
						lv_ref_4_0,
						"org.sabsa.dasl.Dasl.ID");
				}
			)
		)
		otherlv_5='desc'
		{
			newLeafNode(otherlv_5, grammarAccess.getInformationAssetAccess().getDescKeyword_5());
		}
		(
			(
				lv_desc_6_0=RULE_STRING
				{
					newLeafNode(lv_desc_6_0, grammarAccess.getInformationAssetAccess().getDescSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInformationAssetRule());
					}
					setWithLastConsumed(
						$current,
						"desc",
						lv_desc_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='confidentiality'
		{
			newLeafNode(otherlv_7, grammarAccess.getInformationAssetAccess().getConfidentialityKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInformationAssetAccess().getConfidentialityConfidentialityTypeEnumRuleCall_8_0());
				}
				lv_confidentiality_8_0=ruleConfidentialityType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInformationAssetRule());
					}
					set(
						$current,
						"confidentiality",
						lv_confidentiality_8_0,
						"org.sabsa.dasl.Dasl.ConfidentialityType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='integrity'
		{
			newLeafNode(otherlv_9, grammarAccess.getInformationAssetAccess().getIntegrityKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInformationAssetAccess().getIntegrityIntegrityTypeEnumRuleCall_10_0());
				}
				lv_integrity_10_0=ruleIntegrityType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInformationAssetRule());
					}
					set(
						$current,
						"integrity",
						lv_integrity_10_0,
						"org.sabsa.dasl.Dasl.IntegrityType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='availability'
		{
			newLeafNode(otherlv_11, grammarAccess.getInformationAssetAccess().getAvailabilityKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInformationAssetAccess().getAvailabilityAvailabilityTypeEnumRuleCall_12_0());
				}
				lv_availability_12_0=ruleAvailabilityType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInformationAssetRule());
					}
					set(
						$current,
						"availability",
						lv_availability_12_0,
						"org.sabsa.dasl.Dasl.AvailabilityType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getInformationAssetAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleFlow
entryRuleFlow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFlowRule()); }
	iv_ruleFlow=ruleFlow
	{ $current=$iv_ruleFlow.current; }
	EOF;

// Rule Flow
ruleFlow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='flow'
		{
			newLeafNode(otherlv_0, grammarAccess.getFlowAccess().getFlowKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFlowAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlowRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.sabsa.dasl.Dasl.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFlowAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='desc'
			{
				newLeafNode(otherlv_3, grammarAccess.getFlowAccess().getDescKeyword_3_0());
			}
			(
				(
					lv_desc_4_0=RULE_STRING
					{
						newLeafNode(lv_desc_4_0, grammarAccess.getFlowAccess().getDescSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFlowRule());
						}
						setWithLastConsumed(
							$current,
							"desc",
							lv_desc_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_5='from'
		{
			newLeafNode(otherlv_5, grammarAccess.getFlowAccess().getFromKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlowRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getFlowAccess().getFromFlowEndpointCrossReference_5_0());
				}
			)
		)
		otherlv_7='to'
		{
			newLeafNode(otherlv_7, grammarAccess.getFlowAccess().getToKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlowRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getFlowAccess().getToFlowEndpointCrossReference_7_0());
				}
			)
		)
		(
			otherlv_9='assets'
			{
				newLeafNode(otherlv_9, grammarAccess.getFlowAccess().getAssetsKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFlowRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getFlowAccess().getAssetsInformationAssetCrossReference_8_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_11='controls'
			{
				newLeafNode(otherlv_11, grammarAccess.getFlowAccess().getControlsKeyword_9_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFlowRule());
						}
					}
					otherlv_12=RULE_ID
					{
						newLeafNode(otherlv_12, grammarAccess.getFlowAccess().getControlsControlCrossReference_9_1_0());
					}
				)
			)*
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getFlowAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleActor
entryRuleActor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActorRule()); }
	iv_ruleActor=ruleActor
	{ $current=$iv_ruleActor.current; }
	EOF;

// Rule Actor
ruleActor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='actor'
		{
			newLeafNode(otherlv_0, grammarAccess.getActorAccess().getActorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getActorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.sabsa.dasl.Dasl.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getActorAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='desc'
		{
			newLeafNode(otherlv_3, grammarAccess.getActorAccess().getDescKeyword_3());
		}
		(
			(
				lv_desc_4_0=RULE_STRING
				{
					newLeafNode(lv_desc_4_0, grammarAccess.getActorAccess().getDescSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActorRule());
					}
					setWithLastConsumed(
						$current,
						"desc",
						lv_desc_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='roles'
		{
			newLeafNode(otherlv_5, grammarAccess.getActorAccess().getRolesKeyword_5());
		}
		(
			(
				lv_roles_6_0=RULE_STRING
				{
					newLeafNode(lv_roles_6_0, grammarAccess.getActorAccess().getRolesSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActorRule());
					}
					setWithLastConsumed(
						$current,
						"roles",
						lv_roles_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getActorAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleControl
entryRuleControl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControlRule()); }
	iv_ruleControl=ruleControl
	{ $current=$iv_ruleControl.current; }
	EOF;

// Rule Control
ruleControl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='control'
		{
			newLeafNode(otherlv_0, grammarAccess.getControlAccess().getControlKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getControlAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.sabsa.dasl.Dasl.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getControlAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='ref'
		{
			newLeafNode(otherlv_3, grammarAccess.getControlAccess().getRefKeyword_3());
		}
		(
			(
				lv_ref_4_0=RULE_ID
				{
					newLeafNode(lv_ref_4_0, grammarAccess.getControlAccess().getRefIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlRule());
					}
					setWithLastConsumed(
						$current,
						"ref",
						lv_ref_4_0,
						"org.sabsa.dasl.Dasl.ID");
				}
			)
		)
		otherlv_5='baseline'
		{
			newLeafNode(otherlv_5, grammarAccess.getControlAccess().getBaselineKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getControlAccess().getBaseBaseControlCrossReference_6_0());
				}
			)
		)
		otherlv_7='description'
		{
			newLeafNode(otherlv_7, grammarAccess.getControlAccess().getDescriptionKeyword_7());
		}
		(
			(
				lv_desc_8_0=RULE_STRING
				{
					newLeafNode(lv_desc_8_0, grammarAccess.getControlAccess().getDescSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlRule());
					}
					setWithLastConsumed(
						$current,
						"desc",
						lv_desc_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9='attestation'
		{
			newLeafNode(otherlv_9, grammarAccess.getControlAccess().getAttestationKeyword_9());
		}
		(
			(
				lv_att_10_0=RULE_STRING
				{
					newLeafNode(lv_att_10_0, grammarAccess.getControlAccess().getAttSTRINGTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlRule());
					}
					setWithLastConsumed(
						$current,
						"att",
						lv_att_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getControlAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleBaseControl
entryRuleBaseControl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBaseControlRule()); }
	iv_ruleBaseControl=ruleBaseControl
	{ $current=$iv_ruleBaseControl.current; }
	EOF;

// Rule BaseControl
ruleBaseControl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='baseControl'
		{
			newLeafNode(otherlv_0, grammarAccess.getBaseControlAccess().getBaseControlKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBaseControlAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBaseControlRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.sabsa.dasl.Dasl.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBaseControlAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='family'
		{
			newLeafNode(otherlv_3, grammarAccess.getBaseControlAccess().getFamilyKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBaseControlAccess().getFamilyNIST80053ARev4_FamilyTypeEnumRuleCall_4_0());
				}
				lv_family_4_0=ruleNIST80053ARev4_FamilyType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBaseControlRule());
					}
					set(
						$current,
						"family",
						lv_family_4_0,
						"org.sabsa.dasl.Dasl.NIST80053ARev4_FamilyType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='title'
		{
			newLeafNode(otherlv_5, grammarAccess.getBaseControlAccess().getTitleKeyword_5());
		}
		(
			(
				lv_title_6_0=RULE_STRING
				{
					newLeafNode(lv_title_6_0, grammarAccess.getBaseControlAccess().getTitleSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBaseControlRule());
					}
					setWithLastConsumed(
						$current,
						"title",
						lv_title_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='description'
		{
			newLeafNode(otherlv_7, grammarAccess.getBaseControlAccess().getDescriptionKeyword_7());
		}
		(
			(
				lv_desc_8_0=RULE_STRING
				{
					newLeafNode(lv_desc_8_0, grammarAccess.getBaseControlAccess().getDescSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBaseControlRule());
					}
					setWithLastConsumed(
						$current,
						"desc",
						lv_desc_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getBaseControlAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractElementRule()); }
	iv_ruleAbstractElement=ruleAbstractElement
	{ $current=$iv_ruleAbstractElement.current; }
	EOF;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getInformationAssetParserRuleCall_0());
		}
		this_InformationAsset_0=ruleInformationAsset
		{
			$current = $this_InformationAsset_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getComponentParserRuleCall_1());
		}
		this_Component_1=ruleComponent
		{
			$current = $this_Component_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getZoneParserRuleCall_2());
		}
		this_Zone_2=ruleZone
		{
			$current = $this_Zone_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getNodeParserRuleCall_3());
		}
		this_Node_3=ruleNode
		{
			$current = $this_Node_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getActorParserRuleCall_4());
		}
		this_Actor_4=ruleActor
		{
			$current = $this_Actor_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getControlParserRuleCall_5());
		}
		this_Control_5=ruleControl
		{
			$current = $this_Control_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getFlowParserRuleCall_6());
		}
		this_Flow_6=ruleFlow
		{
			$current = $this_Flow_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getBaseControlParserRuleCall_7());
		}
		this_BaseControl_7=ruleBaseControl
		{
			$current = $this_BaseControl_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Rule NodeType
ruleNodeType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='PHYSICAL'
			{
				$current = grammarAccess.getNodeTypeAccess().getPHYSICALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getNodeTypeAccess().getPHYSICALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='VIRTUAL'
			{
				$current = grammarAccess.getNodeTypeAccess().getVIRTUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getNodeTypeAccess().getVIRTUALEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='CONTAINER'
			{
				$current = grammarAccess.getNodeTypeAccess().getCONTAINEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getNodeTypeAccess().getCONTAINEREnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule MetadataType
ruleMetadataType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='SHOW_CONTROLS_ON_COMPONENTS'
			{
				$current = grammarAccess.getMetadataTypeAccess().getSHOW_CONTROLS_ON_COMPONENTSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMetadataTypeAccess().getSHOW_CONTROLS_ON_COMPONENTSEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='SHOW_CONTROLS_ON_FLOWS'
			{
				$current = grammarAccess.getMetadataTypeAccess().getSHOW_CONTROLS_ON_FLOWSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMetadataTypeAccess().getSHOW_CONTROLS_ON_FLOWSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='SHOW_ASSETS_ON_FLOWS'
			{
				$current = grammarAccess.getMetadataTypeAccess().getSHOW_ASSETS_ON_FLOWSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMetadataTypeAccess().getSHOW_ASSETS_ON_FLOWSEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='SHOW_ASSETS_ON_COMPONENTS'
			{
				$current = grammarAccess.getMetadataTypeAccess().getSHOW_ASSETS_ON_COMPONENTSEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getMetadataTypeAccess().getSHOW_ASSETS_ON_COMPONENTSEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule NIST80053ARev4_FamilyType
ruleNIST80053ARev4_FamilyType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ACCESS_CONTROL'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getACCESS_CONTROLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getACCESS_CONTROLEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='AWARENESS_AND_TRAINING'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getAWARENESS_AND_TRAININGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getAWARENESS_AND_TRAININGEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='AUDIT_AND_ACCOUNTABILITY'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getAUDIT_AND_ACCOUNTABILITYEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getAUDIT_AND_ACCOUNTABILITYEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='SECURITY_ASSESSMENT_AND_AUTHORIZATION'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getSECURITY_ASSESSMENT_AND_AUTHORIZATIONEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getSECURITY_ASSESSMENT_AND_AUTHORIZATIONEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='CONFIGURATION_MANAGEMENT'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getCONFIGURATION_MANAGEMENTEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getCONFIGURATION_MANAGEMENTEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='CONTINGENCY_PLANNING'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getCONTINGENCY_PLANNINGEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getCONTINGENCY_PLANNINGEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='IDENTIFICATION_AND_AUTHENTICATION'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getIDENTIFICATION_AND_AUTHENTICATIONEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getIDENTIFICATION_AND_AUTHENTICATIONEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='INCIDENT_RESPONSE'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getINCIDENT_RESPONSEEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getINCIDENT_RESPONSEEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='MAINTENANCE'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getMAINTENANCEEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getMAINTENANCEEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='MEDIA_PROTECTION'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getMEDIA_PROTECTIONEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getMEDIA_PROTECTIONEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='PHYSICAL_AND_ENVIRONMENTAL_PROTECTION'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getPHYSICAL_AND_ENVIRONMENTAL_PROTECTIONEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getPHYSICAL_AND_ENVIRONMENTAL_PROTECTIONEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='PLANNING'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getPLANNINGEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getPLANNINGEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='PROGRAM_MANAGEMENT'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getPROGRAM_MANAGEMENTEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getPROGRAM_MANAGEMENTEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='PERSONNEL_SECURITY'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getPERSONNEL_SECURITYEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getPERSONNEL_SECURITYEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='RISK_ASSESSMENT'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getRISK_ASSESSMENTEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getRISK_ASSESSMENTEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15='SYSTEM_AND_SERVICES_ACQUISITION'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getSYSTEM_AND_SERVICES_ACQUISITIONEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getSYSTEM_AND_SERVICES_ACQUISITIONEnumLiteralDeclaration_15());
			}
		)
		    |
		(
			enumLiteral_16='SYSTEM_AND_COMMUNICATIONS_PROTECTION'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getSYSTEM_AND_COMMUNICATIONS_PROTECTIONEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_16, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getSYSTEM_AND_COMMUNICATIONS_PROTECTIONEnumLiteralDeclaration_16());
			}
		)
		    |
		(
			enumLiteral_17='SYSTEM_AND_INFORMATION_INTEGRITY'
			{
				$current = grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getSYSTEM_AND_INFORMATION_INTEGRITYEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_17, grammarAccess.getNIST80053ARev4_FamilyTypeAccess().getSYSTEM_AND_INFORMATION_INTEGRITYEnumLiteralDeclaration_17());
			}
		)
	)
;

// Rule ConfidentialityType
ruleConfidentialityType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Public'
			{
				$current = grammarAccess.getConfidentialityTypeAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getConfidentialityTypeAccess().getPublicEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Internal'
			{
				$current = grammarAccess.getConfidentialityTypeAccess().getInternalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getConfidentialityTypeAccess().getInternalEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Confidential'
			{
				$current = grammarAccess.getConfidentialityTypeAccess().getConfidentialEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getConfidentialityTypeAccess().getConfidentialEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Restricted'
			{
				$current = grammarAccess.getConfidentialityTypeAccess().getRestrictedEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getConfidentialityTypeAccess().getRestrictedEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule IntegrityType
ruleIntegrityType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Accurate'
			{
				$current = grammarAccess.getIntegrityTypeAccess().getAccurateEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getIntegrityTypeAccess().getAccurateEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='HighlyTrusted'
			{
				$current = grammarAccess.getIntegrityTypeAccess().getHighlyTrustedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getIntegrityTypeAccess().getHighlyTrustedEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Trusted'
			{
				$current = grammarAccess.getIntegrityTypeAccess().getTrustedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getIntegrityTypeAccess().getTrustedEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Uncontrolled'
			{
				$current = grammarAccess.getIntegrityTypeAccess().getUncontrolledEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getIntegrityTypeAccess().getUncontrolledEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule AvailabilityType
ruleAvailabilityType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='C1'
			{
				$current = grammarAccess.getAvailabilityTypeAccess().getC1EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAvailabilityTypeAccess().getC1EnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='C2'
			{
				$current = grammarAccess.getAvailabilityTypeAccess().getC2EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAvailabilityTypeAccess().getC2EnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='C3'
			{
				$current = grammarAccess.getAvailabilityTypeAccess().getC3EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAvailabilityTypeAccess().getC3EnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='C4'
			{
				$current = grammarAccess.getAvailabilityTypeAccess().getC4EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getAvailabilityTypeAccess().getC4EnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Plastic'
			{
				$current = grammarAccess.getAvailabilityTypeAccess().getPlasticEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getAvailabilityTypeAccess().getPlasticEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_'|'.'|'-') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'.'|'-')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
