/*
 * generated by Xtext 2.12.0
 */
grammar InternalDasl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.sabsa.dasl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.sabsa.dasl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.sabsa.dasl.services.DaslGrammarAccess;

}

@parser::members {

 	private DaslGrammarAccess grammarAccess;

    public InternalDaslParser(TokenStream input, DaslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SecurityModel";
   	}

   	@Override
   	protected DaslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSecurityModel
entryRuleSecurityModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSecurityModelRule()); }
	iv_ruleSecurityModel=ruleSecurityModel
	{ $current=$iv_ruleSecurityModel.current; }
	EOF;

// Rule SecurityModel
ruleSecurityModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSecurityModelAccess().getElementsAbstractElementParserRuleCall_0());
			}
			lv_elements_0_0=ruleAbstractElement
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getSecurityModelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"org.sabsa.dasl.Dasl.AbstractElement");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				lv_importURI_1_0=RULE_STRING
				{
					newLeafNode(lv_importURI_1_0, grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportRule());
					}
					setWithLastConsumed(
						$current,
						"importURI",
						lv_importURI_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleZone
entryRuleZone returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getZoneRule()); }
	iv_ruleZone=ruleZone
	{ $current=$iv_ruleZone.current; }
	EOF;

// Rule Zone
ruleZone returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='zone'
		{
			newLeafNode(otherlv_0, grammarAccess.getZoneAccess().getZoneKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getZoneAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getZoneRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getZoneAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='trustLevel'
		{
			newLeafNode(otherlv_3, grammarAccess.getZoneAccess().getTrustLevelKeyword_3());
		}
		(
			(
				lv_trust_4_0=RULE_INT
				{
					newLeafNode(lv_trust_4_0, grammarAccess.getZoneAccess().getTrustINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getZoneRule());
					}
					setWithLastConsumed(
						$current,
						"trust",
						lv_trust_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='ingress'
		{
			newLeafNode(otherlv_5, grammarAccess.getZoneAccess().getIngressKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getZoneRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getZoneAccess().getIngressZonesZoneCrossReference_6_0());
				}
			)
		)*
		otherlv_7='egress'
		{
			newLeafNode(otherlv_7, grammarAccess.getZoneAccess().getEgressKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getZoneRule());
					}
				}
				otherlv_8=RULE_ID
				{
					newLeafNode(otherlv_8, grammarAccess.getZoneAccess().getEgressZonesZoneCrossReference_8_0());
				}
			)
		)*
		otherlv_9='nodes'
		{
			newLeafNode(otherlv_9, grammarAccess.getZoneAccess().getNodesKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getZoneRule());
					}
				}
				otherlv_10=RULE_ID
				{
					newLeafNode(otherlv_10, grammarAccess.getZoneAccess().getNodesNodeCrossReference_10_0());
				}
			)
		)*
		(
			otherlv_11='controls'
			{
				newLeafNode(otherlv_11, grammarAccess.getZoneAccess().getControlsKeyword_11_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getZoneRule());
						}
					}
					otherlv_12=RULE_ID
					{
						newLeafNode(otherlv_12, grammarAccess.getZoneAccess().getControlsControlCrossReference_11_1_0());
					}
				)
			)*
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getZoneAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	iv_ruleNode=ruleNode
	{ $current=$iv_ruleNode.current; }
	EOF;

// Rule Node
ruleNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='node'
		{
			newLeafNode(otherlv_0, grammarAccess.getNodeAccess().getNodeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getNodeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='ref'
		{
			newLeafNode(otherlv_3, grammarAccess.getNodeAccess().getRefKeyword_3());
		}
		(
			(
				lv_ref_4_0=RULE_ID
				{
					newLeafNode(lv_ref_4_0, grammarAccess.getNodeAccess().getRefIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"ref",
						lv_ref_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='host'
		{
			newLeafNode(otherlv_5, grammarAccess.getNodeAccess().getHostKeyword_5());
		}
		(
			(
				lv_host_6_0=RULE_STRING
				{
					newLeafNode(lv_host_6_0, grammarAccess.getNodeAccess().getHostSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"host",
						lv_host_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='os'
		{
			newLeafNode(otherlv_7, grammarAccess.getNodeAccess().getOsKeyword_7());
		}
		(
			(
				lv_os_8_0=RULE_STRING
				{
					newLeafNode(lv_os_8_0, grammarAccess.getNodeAccess().getOsSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"os",
						lv_os_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9='type'
		{
			newLeafNode(otherlv_9, grammarAccess.getNodeAccess().getTypeKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNodeAccess().getValueNodeTypeEnumRuleCall_10_0());
				}
				lv_value_10_0=ruleNodeType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNodeRule());
					}
					set(
						$current,
						"value",
						lv_value_10_0,
						"org.sabsa.dasl.Dasl.NodeType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='components'
		{
			newLeafNode(otherlv_11, grammarAccess.getNodeAccess().getComponentsKeyword_11());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
				}
				otherlv_12=RULE_ID
				{
					newLeafNode(otherlv_12, grammarAccess.getNodeAccess().getComponentsComponentCrossReference_12_0());
				}
			)
		)*
		(
			otherlv_13='controls'
			{
				newLeafNode(otherlv_13, grammarAccess.getNodeAccess().getControlsKeyword_13_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNodeRule());
						}
					}
					otherlv_14=RULE_ID
					{
						newLeafNode(otherlv_14, grammarAccess.getNodeAccess().getControlsControlCrossReference_13_1_0());
					}
				)
			)*
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getNodeAccess().getRightCurlyBracketKeyword_14());
		}
	)
;

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='component'
		{
			newLeafNode(otherlv_0, grammarAccess.getComponentAccess().getComponentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='ref'
		{
			newLeafNode(otherlv_3, grammarAccess.getComponentAccess().getRefKeyword_3());
		}
		(
			(
				lv_ref_4_0=RULE_ID
				{
					newLeafNode(lv_ref_4_0, grammarAccess.getComponentAccess().getRefIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"ref",
						lv_ref_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='stereotype'
		{
			newLeafNode(otherlv_5, grammarAccess.getComponentAccess().getStereotypeKeyword_5());
		}
		(
			(
				lv_stereotype_6_0=RULE_STRING
				{
					newLeafNode(lv_stereotype_6_0, grammarAccess.getComponentAccess().getStereotypeSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"stereotype",
						lv_stereotype_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_7='vendor'
			{
				newLeafNode(otherlv_7, grammarAccess.getComponentAccess().getVendorKeyword_7_0());
			}
			(
				(
					lv_vendor_8_0=RULE_STRING
					{
						newLeafNode(lv_vendor_8_0, grammarAccess.getComponentAccess().getVendorSTRINGTerminalRuleCall_7_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComponentRule());
						}
						setWithLastConsumed(
							$current,
							"vendor",
							lv_vendor_8_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_9='desc'
		{
			newLeafNode(otherlv_9, grammarAccess.getComponentAccess().getDescKeyword_8());
		}
		(
			(
				lv_desc_10_0=RULE_STRING
				{
					newLeafNode(lv_desc_10_0, grammarAccess.getComponentAccess().getDescSTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"desc",
						lv_desc_10_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_11='version'
		{
			newLeafNode(otherlv_11, grammarAccess.getComponentAccess().getVersionKeyword_10());
		}
		(
			(
				lv_version_12_0=RULE_STRING
				{
					newLeafNode(lv_version_12_0, grammarAccess.getComponentAccess().getVersionSTRINGTerminalRuleCall_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"version",
						lv_version_12_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_13='assets'
			{
				newLeafNode(otherlv_13, grammarAccess.getComponentAccess().getAssetsKeyword_12_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComponentRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getComponentAccess().getAssetsInformationAssetCrossReference_12_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_15='controls'
			{
				newLeafNode(otherlv_15, grammarAccess.getComponentAccess().getControlsKeyword_13_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComponentRule());
						}
					}
					otherlv_16=RULE_ID
					{
						newLeafNode(otherlv_16, grammarAccess.getComponentAccess().getControlsControlCrossReference_13_1_0());
					}
				)
			)*
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentAccess().getComponentsComponentParserRuleCall_14_0());
				}
				lv_components_17_0=ruleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRule());
					}
					add(
						$current,
						"components",
						lv_components_17_0,
						"org.sabsa.dasl.Dasl.Component");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_15());
		}
	)
;

// Entry rule entryRuleInformationAsset
entryRuleInformationAsset returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInformationAssetRule()); }
	iv_ruleInformationAsset=ruleInformationAsset
	{ $current=$iv_ruleInformationAsset.current; }
	EOF;

// Rule InformationAsset
ruleInformationAsset returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='informationasset'
		{
			newLeafNode(otherlv_0, grammarAccess.getInformationAssetAccess().getInformationassetKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInformationAssetAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInformationAssetRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getInformationAssetAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='ref'
		{
			newLeafNode(otherlv_3, grammarAccess.getInformationAssetAccess().getRefKeyword_3());
		}
		(
			(
				lv_ref_4_0=RULE_ID
				{
					newLeafNode(lv_ref_4_0, grammarAccess.getInformationAssetAccess().getRefIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInformationAssetRule());
					}
					setWithLastConsumed(
						$current,
						"ref",
						lv_ref_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='desc'
		{
			newLeafNode(otherlv_5, grammarAccess.getInformationAssetAccess().getDescKeyword_5());
		}
		(
			(
				lv_desc_6_0=RULE_STRING
				{
					newLeafNode(lv_desc_6_0, grammarAccess.getInformationAssetAccess().getDescSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInformationAssetRule());
					}
					setWithLastConsumed(
						$current,
						"desc",
						lv_desc_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='confidentiality'
		{
			newLeafNode(otherlv_7, grammarAccess.getInformationAssetAccess().getConfidentialityKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInformationAssetAccess().getConfidentialityConfidentialityTypeEnumRuleCall_8_0());
				}
				lv_confidentiality_8_0=ruleConfidentialityType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInformationAssetRule());
					}
					set(
						$current,
						"confidentiality",
						lv_confidentiality_8_0,
						"org.sabsa.dasl.Dasl.ConfidentialityType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='integrity'
		{
			newLeafNode(otherlv_9, grammarAccess.getInformationAssetAccess().getIntegrityKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInformationAssetAccess().getIntegrityIntegrityTypeEnumRuleCall_10_0());
				}
				lv_integrity_10_0=ruleIntegrityType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInformationAssetRule());
					}
					set(
						$current,
						"integrity",
						lv_integrity_10_0,
						"org.sabsa.dasl.Dasl.IntegrityType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='availability'
		{
			newLeafNode(otherlv_11, grammarAccess.getInformationAssetAccess().getAvailabilityKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInformationAssetAccess().getAvailabilityAvailabilityTypeEnumRuleCall_12_0());
				}
				lv_availability_12_0=ruleAvailabilityType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInformationAssetRule());
					}
					set(
						$current,
						"availability",
						lv_availability_12_0,
						"org.sabsa.dasl.Dasl.AvailabilityType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getInformationAssetAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleFlow
entryRuleFlow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFlowRule()); }
	iv_ruleFlow=ruleFlow
	{ $current=$iv_ruleFlow.current; }
	EOF;

// Rule Flow
ruleFlow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='flow'
		{
			newLeafNode(otherlv_0, grammarAccess.getFlowAccess().getFlowKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFlowAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlowRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFlowAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='from'
		{
			newLeafNode(otherlv_3, grammarAccess.getFlowAccess().getFromKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlowRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getFlowAccess().getFromComponentCrossReference_4_0());
				}
			)
		)
		otherlv_5='to'
		{
			newLeafNode(otherlv_5, grammarAccess.getFlowAccess().getToKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlowRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getFlowAccess().getToComponentCrossReference_6_0());
				}
			)
		)
		(
			otherlv_7='assets'
			{
				newLeafNode(otherlv_7, grammarAccess.getFlowAccess().getAssetsKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFlowRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getFlowAccess().getAssetsInformationAssetCrossReference_7_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		(
			otherlv_9='controls'
			{
				newLeafNode(otherlv_9, grammarAccess.getFlowAccess().getControlsKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFlowRule());
						}
					}
					otherlv_10=RULE_ID
					{
						newLeafNode(otherlv_10, grammarAccess.getFlowAccess().getControlsControlCrossReference_8_1_0());
					}
				)
			)*
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getFlowAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleControl
entryRuleControl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControlRule()); }
	iv_ruleControl=ruleControl
	{ $current=$iv_ruleControl.current; }
	EOF;

// Rule Control
ruleControl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='control'
		{
			newLeafNode(otherlv_0, grammarAccess.getControlAccess().getControlKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getControlAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getControlAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='ref'
		{
			newLeafNode(otherlv_3, grammarAccess.getControlAccess().getRefKeyword_3());
		}
		(
			(
				lv_ref_4_0=RULE_ID
				{
					newLeafNode(lv_ref_4_0, grammarAccess.getControlAccess().getRefIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlRule());
					}
					setWithLastConsumed(
						$current,
						"ref",
						lv_ref_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='type'
		{
			newLeafNode(otherlv_5, grammarAccess.getControlAccess().getTypeKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getControlAccess().getAreaControlTypeEnumRuleCall_6_0());
				}
				lv_area_6_0=ruleControlType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControlRule());
					}
					set(
						$current,
						"area",
						lv_area_6_0,
						"org.sabsa.dasl.Dasl.ControlType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='implementation'
		{
			newLeafNode(otherlv_7, grammarAccess.getControlAccess().getImplementationKeyword_7());
		}
		(
			(
				lv_implementation_8_0=RULE_STRING
				{
					newLeafNode(lv_implementation_8_0, grammarAccess.getControlAccess().getImplementationSTRINGTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlRule());
					}
					setWithLastConsumed(
						$current,
						"implementation",
						lv_implementation_8_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getControlAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractElementRule()); }
	iv_ruleAbstractElement=ruleAbstractElement
	{ $current=$iv_ruleAbstractElement.current; }
	EOF;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getInformationAssetParserRuleCall_0());
		}
		this_InformationAsset_0=ruleInformationAsset
		{
			$current = $this_InformationAsset_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getComponentParserRuleCall_1());
		}
		this_Component_1=ruleComponent
		{
			$current = $this_Component_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getZoneParserRuleCall_2());
		}
		this_Zone_2=ruleZone
		{
			$current = $this_Zone_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getNodeParserRuleCall_3());
		}
		this_Node_3=ruleNode
		{
			$current = $this_Node_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getControlParserRuleCall_4());
		}
		this_Control_4=ruleControl
		{
			$current = $this_Control_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getFlowParserRuleCall_5());
		}
		this_Flow_5=ruleFlow
		{
			$current = $this_Flow_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractElementAccess().getImportParserRuleCall_6());
		}
		this_Import_6=ruleImport
		{
			$current = $this_Import_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Rule NodeType
ruleNodeType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='PHYSICAL'
			{
				$current = grammarAccess.getNodeTypeAccess().getPHYSICALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getNodeTypeAccess().getPHYSICALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='VIRTUAL'
			{
				$current = grammarAccess.getNodeTypeAccess().getVIRTUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getNodeTypeAccess().getVIRTUALEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='CONTAINER'
			{
				$current = grammarAccess.getNodeTypeAccess().getCONTAINEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getNodeTypeAccess().getCONTAINEREnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule ControlType
ruleControlType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='IdentityValidation'
			{
				$current = grammarAccess.getControlTypeAccess().getIdentityValidationEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getControlTypeAccess().getIdentityValidationEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='UserProvisioning'
			{
				$current = grammarAccess.getControlTypeAccess().getUserProvisioningEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getControlTypeAccess().getUserProvisioningEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='SystemUserProvisioning'
			{
				$current = grammarAccess.getControlTypeAccess().getSystemUserProvisioningEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getControlTypeAccess().getSystemUserProvisioningEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='IdentityTransformation'
			{
				$current = grammarAccess.getControlTypeAccess().getIdentityTransformationEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getControlTypeAccess().getIdentityTransformationEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='UserRegistries'
			{
				$current = grammarAccess.getControlTypeAccess().getUserRegistriesEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getControlTypeAccess().getUserRegistriesEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='CredentialManagement'
			{
				$current = grammarAccess.getControlTypeAccess().getCredentialManagementEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getControlTypeAccess().getCredentialManagementEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='Authentication'
			{
				$current = grammarAccess.getControlTypeAccess().getAuthenticationEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getControlTypeAccess().getAuthenticationEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='Authorisation'
			{
				$current = grammarAccess.getControlTypeAccess().getAuthorisationEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getControlTypeAccess().getAuthorisationEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='PrivilegeManagement'
			{
				$current = grammarAccess.getControlTypeAccess().getPrivilegeManagementEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getControlTypeAccess().getPrivilegeManagementEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='ReducedSignOn'
			{
				$current = grammarAccess.getControlTypeAccess().getReducedSignOnEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getControlTypeAccess().getReducedSignOnEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='Federation'
			{
				$current = grammarAccess.getControlTypeAccess().getFederationEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getControlTypeAccess().getFederationEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11='AccessEntitlementGovernance'
			{
				$current = grammarAccess.getControlTypeAccess().getAccessEntitlementGovernanceEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getControlTypeAccess().getAccessEntitlementGovernanceEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12='FirewallsNetwork'
			{
				$current = grammarAccess.getControlTypeAccess().getFirewallsNetworkEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getControlTypeAccess().getFirewallsNetworkEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13='FirewallsApplication'
			{
				$current = grammarAccess.getControlTypeAccess().getFirewallsApplicationEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getControlTypeAccess().getFirewallsApplicationEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14='DenialofService'
			{
				$current = grammarAccess.getControlTypeAccess().getDenialofServiceEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getControlTypeAccess().getDenialofServiceEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15='NetworkAdmissionControl'
			{
				$current = grammarAccess.getControlTypeAccess().getNetworkAdmissionControlEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getControlTypeAccess().getNetworkAdmissionControlEnumLiteralDeclaration_15());
			}
		)
		    |
		(
			enumLiteral_16='RemoteAccessGateway'
			{
				$current = grammarAccess.getControlTypeAccess().getRemoteAccessGatewayEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_16, grammarAccess.getControlTypeAccess().getRemoteAccessGatewayEnumLiteralDeclaration_16());
			}
		)
		    |
		(
			enumLiteral_17='IntrusionPreventionDetection'
			{
				$current = grammarAccess.getControlTypeAccess().getIntrusionPreventionDetectionEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_17, grammarAccess.getControlTypeAccess().getIntrusionPreventionDetectionEnumLiteralDeclaration_17());
			}
		)
		    |
		(
			enumLiteral_18='Antivirus'
			{
				$current = grammarAccess.getControlTypeAccess().getAntivirusEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_18, grammarAccess.getControlTypeAccess().getAntivirusEnumLiteralDeclaration_18());
			}
		)
		    |
		(
			enumLiteral_19='ContentFilter'
			{
				$current = grammarAccess.getControlTypeAccess().getContentFilterEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_19, grammarAccess.getControlTypeAccess().getContentFilterEnumLiteralDeclaration_19());
			}
		)
		    |
		(
			enumLiteral_20='MessageSecurity'
			{
				$current = grammarAccess.getControlTypeAccess().getMessageSecurityEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_20, grammarAccess.getControlTypeAccess().getMessageSecurityEnumLiteralDeclaration_20());
			}
		)
		    |
		(
			enumLiteral_21='TransportSecurity'
			{
				$current = grammarAccess.getControlTypeAccess().getTransportSecurityEnumLiteralDeclaration_21().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_21, grammarAccess.getControlTypeAccess().getTransportSecurityEnumLiteralDeclaration_21());
			}
		)
		    |
		(
			enumLiteral_22='StoredDataSecurity'
			{
				$current = grammarAccess.getControlTypeAccess().getStoredDataSecurityEnumLiteralDeclaration_22().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_22, grammarAccess.getControlTypeAccess().getStoredDataSecurityEnumLiteralDeclaration_22());
			}
		)
		    |
		(
			enumLiteral_23='DataLossPrevention'
			{
				$current = grammarAccess.getControlTypeAccess().getDataLossPreventionEnumLiteralDeclaration_23().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_23, grammarAccess.getControlTypeAccess().getDataLossPreventionEnumLiteralDeclaration_23());
			}
		)
		    |
		(
			enumLiteral_24='DataObfuscation'
			{
				$current = grammarAccess.getControlTypeAccess().getDataObfuscationEnumLiteralDeclaration_24().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_24, grammarAccess.getControlTypeAccess().getDataObfuscationEnumLiteralDeclaration_24());
			}
		)
		    |
		(
			enumLiteral_25='DataDestruction'
			{
				$current = grammarAccess.getControlTypeAccess().getDataDestructionEnumLiteralDeclaration_25().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_25, grammarAccess.getControlTypeAccess().getDataDestructionEnumLiteralDeclaration_25());
			}
		)
		    |
		(
			enumLiteral_26='FraudSecurity'
			{
				$current = grammarAccess.getControlTypeAccess().getFraudSecurityEnumLiteralDeclaration_26().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_26, grammarAccess.getControlTypeAccess().getFraudSecurityEnumLiteralDeclaration_26());
			}
		)
		    |
		(
			enumLiteral_27='DataTransactionSecurity'
			{
				$current = grammarAccess.getControlTypeAccess().getDataTransactionSecurityEnumLiteralDeclaration_27().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_27, grammarAccess.getControlTypeAccess().getDataTransactionSecurityEnumLiteralDeclaration_27());
			}
		)
		    |
		(
			enumLiteral_28='CentralisedHSM_CA_PKI'
			{
				$current = grammarAccess.getControlTypeAccess().getCentralisedHSM_CA_PKIEnumLiteralDeclaration_28().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_28, grammarAccess.getControlTypeAccess().getCentralisedHSM_CA_PKIEnumLiteralDeclaration_28());
			}
		)
		    |
		(
			enumLiteral_29='Standalone'
			{
				$current = grammarAccess.getControlTypeAccess().getStandaloneEnumLiteralDeclaration_29().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_29, grammarAccess.getControlTypeAccess().getStandaloneEnumLiteralDeclaration_29());
			}
		)
		    |
		(
			enumLiteral_30='SecurityTesting'
			{
				$current = grammarAccess.getControlTypeAccess().getSecurityTestingEnumLiteralDeclaration_30().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_30, grammarAccess.getControlTypeAccess().getSecurityTestingEnumLiteralDeclaration_30());
			}
		)
		    |
		(
			enumLiteral_31='PatchManagement'
			{
				$current = grammarAccess.getControlTypeAccess().getPatchManagementEnumLiteralDeclaration_31().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_31, grammarAccess.getControlTypeAccess().getPatchManagementEnumLiteralDeclaration_31());
			}
		)
		    |
		(
			enumLiteral_32='VulnerabilityManagement'
			{
				$current = grammarAccess.getControlTypeAccess().getVulnerabilityManagementEnumLiteralDeclaration_32().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_32, grammarAccess.getControlTypeAccess().getVulnerabilityManagementEnumLiteralDeclaration_32());
			}
		)
		    |
		(
			enumLiteral_33='CentralisedReporting'
			{
				$current = grammarAccess.getControlTypeAccess().getCentralisedReportingEnumLiteralDeclaration_33().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_33, grammarAccess.getControlTypeAccess().getCentralisedReportingEnumLiteralDeclaration_33());
			}
		)
		    |
		(
			enumLiteral_34='EventCorrelation'
			{
				$current = grammarAccess.getControlTypeAccess().getEventCorrelationEnumLiteralDeclaration_34().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_34, grammarAccess.getControlTypeAccess().getEventCorrelationEnumLiteralDeclaration_34());
			}
		)
		    |
		(
			enumLiteral_35='SecurityAuditLogMonitoring'
			{
				$current = grammarAccess.getControlTypeAccess().getSecurityAuditLogMonitoringEnumLiteralDeclaration_35().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_35, grammarAccess.getControlTypeAccess().getSecurityAuditLogMonitoringEnumLiteralDeclaration_35());
			}
		)
		    |
		(
			enumLiteral_36='ComplianceTesting'
			{
				$current = grammarAccess.getControlTypeAccess().getComplianceTestingEnumLiteralDeclaration_36().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_36, grammarAccess.getControlTypeAccess().getComplianceTestingEnumLiteralDeclaration_36());
			}
		)
		    |
		(
			enumLiteral_37='IncidentManagement'
			{
				$current = grammarAccess.getControlTypeAccess().getIncidentManagementEnumLiteralDeclaration_37().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_37, grammarAccess.getControlTypeAccess().getIncidentManagementEnumLiteralDeclaration_37());
			}
		)
		    |
		(
			enumLiteral_38='Forensic'
			{
				$current = grammarAccess.getControlTypeAccess().getForensicEnumLiteralDeclaration_38().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_38, grammarAccess.getControlTypeAccess().getForensicEnumLiteralDeclaration_38());
			}
		)
		    |
		(
			enumLiteral_39='Legal'
			{
				$current = grammarAccess.getControlTypeAccess().getLegalEnumLiteralDeclaration_39().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_39, grammarAccess.getControlTypeAccess().getLegalEnumLiteralDeclaration_39());
			}
		)
	)
;

// Rule ConfidentialityType
ruleConfidentialityType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Public'
			{
				$current = grammarAccess.getConfidentialityTypeAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getConfidentialityTypeAccess().getPublicEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Internal'
			{
				$current = grammarAccess.getConfidentialityTypeAccess().getInternalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getConfidentialityTypeAccess().getInternalEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Confidential'
			{
				$current = grammarAccess.getConfidentialityTypeAccess().getConfidentialEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getConfidentialityTypeAccess().getConfidentialEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Restricted'
			{
				$current = grammarAccess.getConfidentialityTypeAccess().getRestrictedEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getConfidentialityTypeAccess().getRestrictedEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule IntegrityType
ruleIntegrityType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Accurate'
			{
				$current = grammarAccess.getIntegrityTypeAccess().getAccurateEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getIntegrityTypeAccess().getAccurateEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='HighlyTrusted'
			{
				$current = grammarAccess.getIntegrityTypeAccess().getHighlyTrustedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getIntegrityTypeAccess().getHighlyTrustedEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Trusted'
			{
				$current = grammarAccess.getIntegrityTypeAccess().getTrustedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getIntegrityTypeAccess().getTrustedEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Uncontrolled'
			{
				$current = grammarAccess.getIntegrityTypeAccess().getUncontrolledEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getIntegrityTypeAccess().getUncontrolledEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule AvailabilityType
ruleAvailabilityType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Platinum'
			{
				$current = grammarAccess.getAvailabilityTypeAccess().getPlatinumEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAvailabilityTypeAccess().getPlatinumEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Gold'
			{
				$current = grammarAccess.getAvailabilityTypeAccess().getGoldEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAvailabilityTypeAccess().getGoldEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Silver'
			{
				$current = grammarAccess.getAvailabilityTypeAccess().getSilverEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAvailabilityTypeAccess().getSilverEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Bronze'
			{
				$current = grammarAccess.getAvailabilityTypeAccess().getBronzeEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getAvailabilityTypeAccess().getBronzeEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Plastic'
			{
				$current = grammarAccess.getAvailabilityTypeAccess().getPlasticEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getAvailabilityTypeAccess().getPlasticEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
