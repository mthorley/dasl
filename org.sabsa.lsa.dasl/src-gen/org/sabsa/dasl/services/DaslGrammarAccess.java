/*
 * generated by Xtext 2.12.0
 */
package org.sabsa.dasl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DaslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class SecurityModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sabsa.dasl.Dasl.SecurityModel");
		private final Assignment cElementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementsAbstractElementParserRuleCall_0 = (RuleCall)cElementsAssignment.eContents().get(0);
		
		//// The security view of the architecture - this can be expanded to other views later.
		//SecurityModel:
		//	elements+=AbstractElement*;
		@Override public ParserRule getRule() { return rule; }
		
		//elements+=AbstractElement*
		public Assignment getElementsAssignment() { return cElementsAssignment; }
		
		//AbstractElement
		public RuleCall getElementsAbstractElementParserRuleCall_0() { return cElementsAbstractElementParserRuleCall_0; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sabsa.dasl.Dasl.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class QualifiedNameWithWildcardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sabsa.dasl.Dasl.QualifiedNameWithWildcard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//QualifiedNameWithWildcard:
		//	QualifiedName '.*'?;
		@Override public ParserRule getRule() { return rule; }
		
		//QualifiedName '.*'?
		public Group getGroup() { return cGroup; }
		
		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }
		
		//'.*'?
		public Keyword getFullStopAsteriskKeyword_1() { return cFullStopAsteriskKeyword_1; }
	}
	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sabsa.dasl.Dasl.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportURIAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportURISTRINGTerminalRuleCall_1_0 = (RuleCall)cImportURIAssignment_1.eContents().get(0);
		
		//Import:
		//	'import' importURI=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'import' importURI=STRING
		public Group getGroup() { return cGroup; }
		
		//'import'
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }
		
		//importURI=STRING
		public Assignment getImportURIAssignment_1() { return cImportURIAssignment_1; }
		
		//STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_1_0() { return cImportURISTRINGTerminalRuleCall_1_0; }
	}
	public class ZoneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sabsa.dasl.Dasl.Zone");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cZoneKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTrustLevelKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTrustAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTrustINTTerminalRuleCall_4_0 = (RuleCall)cTrustAssignment_4.eContents().get(0);
		private final Keyword cIngressKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cIngressZonesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cIngressZonesZoneCrossReference_6_0 = (CrossReference)cIngressZonesAssignment_6.eContents().get(0);
		private final RuleCall cIngressZonesZoneIDTerminalRuleCall_6_0_1 = (RuleCall)cIngressZonesZoneCrossReference_6_0.eContents().get(1);
		private final Keyword cEgressKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cEgressZonesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cEgressZonesZoneCrossReference_8_0 = (CrossReference)cEgressZonesAssignment_8.eContents().get(0);
		private final RuleCall cEgressZonesZoneIDTerminalRuleCall_8_0_1 = (RuleCall)cEgressZonesZoneCrossReference_8_0.eContents().get(1);
		private final Keyword cNodesKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cNodesAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cNodesNodeCrossReference_10_0 = (CrossReference)cNodesAssignment_10.eContents().get(0);
		private final RuleCall cNodesNodeIDTerminalRuleCall_10_0_1 = (RuleCall)cNodesNodeCrossReference_10_0.eContents().get(1);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cControlsKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cControlsAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final CrossReference cControlsControlCrossReference_11_1_0 = (CrossReference)cControlsAssignment_11_1.eContents().get(0);
		private final RuleCall cControlsControlIDTerminalRuleCall_11_1_0_1 = (RuleCall)cControlsControlCrossReference_11_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Zone:
		//	'zone' name=ID '{'
		//	'trustLevel' trust=INT
		//	'ingress' ingressZones+=[Zone]*
		//	'egress' egressZones+=[Zone]*
		//	'nodes' nodes+=[Node]* ('controls' controls+=[Control])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'zone' name=ID '{' 'trustLevel' trust=INT 'ingress' ingressZones+=[Zone]* 'egress' egressZones+=[Zone]* 'nodes'
		//nodes+=[Node]* ('controls' controls+=[Control])? '}'
		public Group getGroup() { return cGroup; }
		
		//'zone'
		public Keyword getZoneKeyword_0() { return cZoneKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'trustLevel'
		public Keyword getTrustLevelKeyword_3() { return cTrustLevelKeyword_3; }
		
		//trust=INT
		public Assignment getTrustAssignment_4() { return cTrustAssignment_4; }
		
		//INT
		public RuleCall getTrustINTTerminalRuleCall_4_0() { return cTrustINTTerminalRuleCall_4_0; }
		
		//'ingress'
		public Keyword getIngressKeyword_5() { return cIngressKeyword_5; }
		
		//ingressZones+=[Zone]*
		public Assignment getIngressZonesAssignment_6() { return cIngressZonesAssignment_6; }
		
		//[Zone]
		public CrossReference getIngressZonesZoneCrossReference_6_0() { return cIngressZonesZoneCrossReference_6_0; }
		
		//ID
		public RuleCall getIngressZonesZoneIDTerminalRuleCall_6_0_1() { return cIngressZonesZoneIDTerminalRuleCall_6_0_1; }
		
		//'egress'
		public Keyword getEgressKeyword_7() { return cEgressKeyword_7; }
		
		//egressZones+=[Zone]*
		public Assignment getEgressZonesAssignment_8() { return cEgressZonesAssignment_8; }
		
		//[Zone]
		public CrossReference getEgressZonesZoneCrossReference_8_0() { return cEgressZonesZoneCrossReference_8_0; }
		
		//ID
		public RuleCall getEgressZonesZoneIDTerminalRuleCall_8_0_1() { return cEgressZonesZoneIDTerminalRuleCall_8_0_1; }
		
		//'nodes'
		public Keyword getNodesKeyword_9() { return cNodesKeyword_9; }
		
		//nodes+=[Node]*
		public Assignment getNodesAssignment_10() { return cNodesAssignment_10; }
		
		//[Node]
		public CrossReference getNodesNodeCrossReference_10_0() { return cNodesNodeCrossReference_10_0; }
		
		//ID
		public RuleCall getNodesNodeIDTerminalRuleCall_10_0_1() { return cNodesNodeIDTerminalRuleCall_10_0_1; }
		
		//('controls' controls+=[Control])?
		public Group getGroup_11() { return cGroup_11; }
		
		//'controls'
		public Keyword getControlsKeyword_11_0() { return cControlsKeyword_11_0; }
		
		//controls+=[Control]
		public Assignment getControlsAssignment_11_1() { return cControlsAssignment_11_1; }
		
		//[Control]
		public CrossReference getControlsControlCrossReference_11_1_0() { return cControlsControlCrossReference_11_1_0; }
		
		//ID
		public RuleCall getControlsControlIDTerminalRuleCall_11_1_0_1() { return cControlsControlIDTerminalRuleCall_11_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class NodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sabsa.dasl.Dasl.Node");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRefKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRefAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRefIDTerminalRuleCall_4_0 = (RuleCall)cRefAssignment_4.eContents().get(0);
		private final Keyword cHostKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cHostAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cHostSTRINGTerminalRuleCall_6_0 = (RuleCall)cHostAssignment_6.eContents().get(0);
		private final Keyword cOsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cOsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cOsSTRINGTerminalRuleCall_8_0 = (RuleCall)cOsAssignment_8.eContents().get(0);
		private final Keyword cTypeKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cValueAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cValueNodeTypeEnumRuleCall_10_0 = (RuleCall)cValueAssignment_10.eContents().get(0);
		private final Keyword cComponentsKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cComponentsAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final CrossReference cComponentsComponentCrossReference_12_0 = (CrossReference)cComponentsAssignment_12.eContents().get(0);
		private final RuleCall cComponentsComponentIDTerminalRuleCall_12_0_1 = (RuleCall)cComponentsComponentCrossReference_12_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		///** 
		//Nodes represent either a physical or virtual environment
		//upon which components are deployed too.
		//*/ Node:
		//	'node' name=ID '{'
		//	'ref' ref=ID
		//	'host' host=STRING
		//	'os' os=STRING
		//	'type' value=NodeType 'components' components+=[Component]*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'node' name=ID '{' 'ref' ref=ID 'host' host=STRING 'os' os=STRING 'type' value=NodeType 'components'
		//components+=[Component]* '}'
		public Group getGroup() { return cGroup; }
		
		//'node'
		public Keyword getNodeKeyword_0() { return cNodeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'ref'
		public Keyword getRefKeyword_3() { return cRefKeyword_3; }
		
		//ref=ID
		public Assignment getRefAssignment_4() { return cRefAssignment_4; }
		
		//ID
		public RuleCall getRefIDTerminalRuleCall_4_0() { return cRefIDTerminalRuleCall_4_0; }
		
		//'host'
		public Keyword getHostKeyword_5() { return cHostKeyword_5; }
		
		//host=STRING
		public Assignment getHostAssignment_6() { return cHostAssignment_6; }
		
		//STRING
		public RuleCall getHostSTRINGTerminalRuleCall_6_0() { return cHostSTRINGTerminalRuleCall_6_0; }
		
		//'os'
		public Keyword getOsKeyword_7() { return cOsKeyword_7; }
		
		//os=STRING
		public Assignment getOsAssignment_8() { return cOsAssignment_8; }
		
		//STRING
		public RuleCall getOsSTRINGTerminalRuleCall_8_0() { return cOsSTRINGTerminalRuleCall_8_0; }
		
		//'type'
		public Keyword getTypeKeyword_9() { return cTypeKeyword_9; }
		
		//value=NodeType
		public Assignment getValueAssignment_10() { return cValueAssignment_10; }
		
		//NodeType
		public RuleCall getValueNodeTypeEnumRuleCall_10_0() { return cValueNodeTypeEnumRuleCall_10_0; }
		
		//'components'
		public Keyword getComponentsKeyword_11() { return cComponentsKeyword_11; }
		
		//components+=[Component]*
		public Assignment getComponentsAssignment_12() { return cComponentsAssignment_12; }
		
		//[Component]
		public CrossReference getComponentsComponentCrossReference_12_0() { return cComponentsComponentCrossReference_12_0; }
		
		//ID
		public RuleCall getComponentsComponentIDTerminalRuleCall_12_0_1() { return cComponentsComponentIDTerminalRuleCall_12_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sabsa.dasl.Dasl.Component");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComponentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRefKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRefAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRefIDTerminalRuleCall_4_0 = (RuleCall)cRefAssignment_4.eContents().get(0);
		private final Keyword cStereotypeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cStereotypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cStereotypeSTRINGTerminalRuleCall_6_0 = (RuleCall)cStereotypeAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cVendorKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cVendorAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cVendorSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cVendorAssignment_7_1.eContents().get(0);
		private final Keyword cDescKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cDescAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDescSTRINGTerminalRuleCall_9_0 = (RuleCall)cDescAssignment_9.eContents().get(0);
		private final Keyword cVersionKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cVersionAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cVersionSTRINGTerminalRuleCall_11_0 = (RuleCall)cVersionAssignment_11.eContents().get(0);
		private final Keyword cAssetsKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cAssetsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final CrossReference cAssetsInformationAssetCrossReference_13_0 = (CrossReference)cAssetsAssignment_13.eContents().get(0);
		private final RuleCall cAssetsInformationAssetQualifiedNameParserRuleCall_13_0_1 = (RuleCall)cAssetsInformationAssetCrossReference_13_0.eContents().get(1);
		private final Assignment cComponentsAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cComponentsComponentParserRuleCall_14_0 = (RuleCall)cComponentsAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//Component:
		//	'component' name=ID '{'
		//	'ref' ref=ID
		//	'stereotype' stereotype=STRING ('vendor' vendor=STRING)?
		//	'desc' desc=STRING
		//	'version' version=STRING
		//	'assets' assets+=[InformationAsset|QualifiedName]*
		//	components+=Component*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'component' name=ID '{' 'ref' ref=ID 'stereotype' stereotype=STRING ('vendor' vendor=STRING)? 'desc' desc=STRING
		//'version' version=STRING 'assets' assets+=[InformationAsset|QualifiedName]* components+=Component* '}'
		public Group getGroup() { return cGroup; }
		
		//'component'
		public Keyword getComponentKeyword_0() { return cComponentKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'ref'
		public Keyword getRefKeyword_3() { return cRefKeyword_3; }
		
		//ref=ID
		public Assignment getRefAssignment_4() { return cRefAssignment_4; }
		
		//ID
		public RuleCall getRefIDTerminalRuleCall_4_0() { return cRefIDTerminalRuleCall_4_0; }
		
		//'stereotype'
		public Keyword getStereotypeKeyword_5() { return cStereotypeKeyword_5; }
		
		//stereotype=STRING
		public Assignment getStereotypeAssignment_6() { return cStereotypeAssignment_6; }
		
		//STRING
		public RuleCall getStereotypeSTRINGTerminalRuleCall_6_0() { return cStereotypeSTRINGTerminalRuleCall_6_0; }
		
		//('vendor' vendor=STRING)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'vendor'
		public Keyword getVendorKeyword_7_0() { return cVendorKeyword_7_0; }
		
		//vendor=STRING
		public Assignment getVendorAssignment_7_1() { return cVendorAssignment_7_1; }
		
		//STRING
		public RuleCall getVendorSTRINGTerminalRuleCall_7_1_0() { return cVendorSTRINGTerminalRuleCall_7_1_0; }
		
		//'desc'
		public Keyword getDescKeyword_8() { return cDescKeyword_8; }
		
		//desc=STRING
		public Assignment getDescAssignment_9() { return cDescAssignment_9; }
		
		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_9_0() { return cDescSTRINGTerminalRuleCall_9_0; }
		
		//'version'
		public Keyword getVersionKeyword_10() { return cVersionKeyword_10; }
		
		//version=STRING
		public Assignment getVersionAssignment_11() { return cVersionAssignment_11; }
		
		//STRING
		public RuleCall getVersionSTRINGTerminalRuleCall_11_0() { return cVersionSTRINGTerminalRuleCall_11_0; }
		
		//'assets'
		public Keyword getAssetsKeyword_12() { return cAssetsKeyword_12; }
		
		//assets+=[InformationAsset|QualifiedName]*
		public Assignment getAssetsAssignment_13() { return cAssetsAssignment_13; }
		
		//[InformationAsset|QualifiedName]
		public CrossReference getAssetsInformationAssetCrossReference_13_0() { return cAssetsInformationAssetCrossReference_13_0; }
		
		//QualifiedName
		public RuleCall getAssetsInformationAssetQualifiedNameParserRuleCall_13_0_1() { return cAssetsInformationAssetQualifiedNameParserRuleCall_13_0_1; }
		
		//components+=Component*
		public Assignment getComponentsAssignment_14() { return cComponentsAssignment_14; }
		
		//Component
		public RuleCall getComponentsComponentParserRuleCall_14_0() { return cComponentsComponentParserRuleCall_14_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}
	public class InformationAssetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sabsa.dasl.Dasl.InformationAsset");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInformationassetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRefKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRefAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRefIDTerminalRuleCall_4_0 = (RuleCall)cRefAssignment_4.eContents().get(0);
		private final Keyword cDescKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDescAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDescSTRINGTerminalRuleCall_6_0 = (RuleCall)cDescAssignment_6.eContents().get(0);
		private final Keyword cConfidentialityKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cConfidentialityAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cConfidentialityConfidentialityTypeEnumRuleCall_8_0 = (RuleCall)cConfidentialityAssignment_8.eContents().get(0);
		private final Keyword cIntegrityKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cIntegrityAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cIntegrityIntegrityTypeEnumRuleCall_10_0 = (RuleCall)cIntegrityAssignment_10.eContents().get(0);
		private final Keyword cAvailabilityKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cAvailabilityAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cAvailabilityAvailabilityTypeEnumRuleCall_12_0 = (RuleCall)cAvailabilityAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//InformationAsset:
		//	'informationasset' name=ID '{'
		//	'ref' ref=ID
		//	'desc' desc=STRING
		//	'confidentiality' confidentiality=ConfidentialityType
		//	'integrity' integrity=IntegrityType
		//	'availability' availability=AvailabilityType
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'informationasset' name=ID '{' 'ref' ref=ID 'desc' desc=STRING 'confidentiality' confidentiality=ConfidentialityType
		//'integrity' integrity=IntegrityType 'availability' availability=AvailabilityType '}'
		public Group getGroup() { return cGroup; }
		
		//'informationasset'
		public Keyword getInformationassetKeyword_0() { return cInformationassetKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'ref'
		public Keyword getRefKeyword_3() { return cRefKeyword_3; }
		
		//ref=ID
		public Assignment getRefAssignment_4() { return cRefAssignment_4; }
		
		//ID
		public RuleCall getRefIDTerminalRuleCall_4_0() { return cRefIDTerminalRuleCall_4_0; }
		
		//'desc'
		public Keyword getDescKeyword_5() { return cDescKeyword_5; }
		
		//desc=STRING
		public Assignment getDescAssignment_6() { return cDescAssignment_6; }
		
		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_6_0() { return cDescSTRINGTerminalRuleCall_6_0; }
		
		//'confidentiality'
		public Keyword getConfidentialityKeyword_7() { return cConfidentialityKeyword_7; }
		
		//confidentiality=ConfidentialityType
		public Assignment getConfidentialityAssignment_8() { return cConfidentialityAssignment_8; }
		
		//ConfidentialityType
		public RuleCall getConfidentialityConfidentialityTypeEnumRuleCall_8_0() { return cConfidentialityConfidentialityTypeEnumRuleCall_8_0; }
		
		//'integrity'
		public Keyword getIntegrityKeyword_9() { return cIntegrityKeyword_9; }
		
		//integrity=IntegrityType
		public Assignment getIntegrityAssignment_10() { return cIntegrityAssignment_10; }
		
		//IntegrityType
		public RuleCall getIntegrityIntegrityTypeEnumRuleCall_10_0() { return cIntegrityIntegrityTypeEnumRuleCall_10_0; }
		
		//'availability'
		public Keyword getAvailabilityKeyword_11() { return cAvailabilityKeyword_11; }
		
		//availability=AvailabilityType
		public Assignment getAvailabilityAssignment_12() { return cAvailabilityAssignment_12; }
		
		//AvailabilityType
		public RuleCall getAvailabilityAvailabilityTypeEnumRuleCall_12_0() { return cAvailabilityAvailabilityTypeEnumRuleCall_12_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class FlowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sabsa.dasl.Dasl.Flow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFlowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFromAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cFromComponentCrossReference_4_0 = (CrossReference)cFromAssignment_4.eContents().get(0);
		private final RuleCall cFromComponentIDTerminalRuleCall_4_0_1 = (RuleCall)cFromComponentCrossReference_4_0.eContents().get(1);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cToAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cToComponentCrossReference_6_0 = (CrossReference)cToAssignment_6.eContents().get(0);
		private final RuleCall cToComponentIDTerminalRuleCall_6_0_1 = (RuleCall)cToComponentCrossReference_6_0.eContents().get(1);
		private final Keyword cInformationassetsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cAssetsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cAssetsInformationAssetCrossReference_8_0 = (CrossReference)cAssetsAssignment_8.eContents().get(0);
		private final RuleCall cAssetsInformationAssetQualifiedNameParserRuleCall_8_0_1 = (RuleCall)cAssetsInformationAssetCrossReference_8_0.eContents().get(1);
		private final Keyword cControlsKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cControlsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cControlsControlCrossReference_10_0 = (CrossReference)cControlsAssignment_10.eContents().get(0);
		private final RuleCall cControlsControlIDTerminalRuleCall_10_0_1 = (RuleCall)cControlsControlCrossReference_10_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Flow:
		//	'flow' name=ID '{'
		//	'from' from=[Component]
		//	'to' to=[Component]
		//	'informationassets' assets+=[InformationAsset|QualifiedName]*
		//	'controls' controls+=[Control]*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'flow' name=ID '{' 'from' from=[Component] 'to' to=[Component] 'informationassets'
		//assets+=[InformationAsset|QualifiedName]* 'controls' controls+=[Control]* '}'
		public Group getGroup() { return cGroup; }
		
		//'flow'
		public Keyword getFlowKeyword_0() { return cFlowKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//from=[Component]
		public Assignment getFromAssignment_4() { return cFromAssignment_4; }
		
		//[Component]
		public CrossReference getFromComponentCrossReference_4_0() { return cFromComponentCrossReference_4_0; }
		
		//ID
		public RuleCall getFromComponentIDTerminalRuleCall_4_0_1() { return cFromComponentIDTerminalRuleCall_4_0_1; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//to=[Component]
		public Assignment getToAssignment_6() { return cToAssignment_6; }
		
		//[Component]
		public CrossReference getToComponentCrossReference_6_0() { return cToComponentCrossReference_6_0; }
		
		//ID
		public RuleCall getToComponentIDTerminalRuleCall_6_0_1() { return cToComponentIDTerminalRuleCall_6_0_1; }
		
		//'informationassets'
		public Keyword getInformationassetsKeyword_7() { return cInformationassetsKeyword_7; }
		
		//assets+=[InformationAsset|QualifiedName]*
		public Assignment getAssetsAssignment_8() { return cAssetsAssignment_8; }
		
		//[InformationAsset|QualifiedName]
		public CrossReference getAssetsInformationAssetCrossReference_8_0() { return cAssetsInformationAssetCrossReference_8_0; }
		
		//QualifiedName
		public RuleCall getAssetsInformationAssetQualifiedNameParserRuleCall_8_0_1() { return cAssetsInformationAssetQualifiedNameParserRuleCall_8_0_1; }
		
		//'controls'
		public Keyword getControlsKeyword_9() { return cControlsKeyword_9; }
		
		//controls+=[Control]*
		public Assignment getControlsAssignment_10() { return cControlsAssignment_10; }
		
		//[Control]
		public CrossReference getControlsControlCrossReference_10_0() { return cControlsControlCrossReference_10_0; }
		
		//ID
		public RuleCall getControlsControlIDTerminalRuleCall_10_0_1() { return cControlsControlIDTerminalRuleCall_10_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class ControlElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sabsa.dasl.Dasl.Control");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cControlKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRefKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRefAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRefIDTerminalRuleCall_4_0 = (RuleCall)cRefAssignment_4.eContents().get(0);
		private final Keyword cTypeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAreaAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAreaControlTypeEnumRuleCall_6_0 = (RuleCall)cAreaAssignment_6.eContents().get(0);
		private final Keyword cImplementationKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cImplementationAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cImplementationSTRINGTerminalRuleCall_8_0 = (RuleCall)cImplementationAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Control:
		//	'control' name=ID '{'
		//	'ref' ref=ID
		//	'type' area=ControlType
		//	'implementation' implementation=STRING
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'control' name=ID '{' 'ref' ref=ID 'type' area=ControlType 'implementation' implementation=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'control'
		public Keyword getControlKeyword_0() { return cControlKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'ref'
		public Keyword getRefKeyword_3() { return cRefKeyword_3; }
		
		//ref=ID
		public Assignment getRefAssignment_4() { return cRefAssignment_4; }
		
		//ID
		public RuleCall getRefIDTerminalRuleCall_4_0() { return cRefIDTerminalRuleCall_4_0; }
		
		//'type'
		public Keyword getTypeKeyword_5() { return cTypeKeyword_5; }
		
		//area=ControlType
		public Assignment getAreaAssignment_6() { return cAreaAssignment_6; }
		
		//ControlType
		public RuleCall getAreaControlTypeEnumRuleCall_6_0() { return cAreaControlTypeEnumRuleCall_6_0; }
		
		//'implementation'
		public Keyword getImplementationKeyword_7() { return cImplementationKeyword_7; }
		
		//implementation=STRING
		public Assignment getImplementationAssignment_8() { return cImplementationAssignment_8; }
		
		//STRING
		public RuleCall getImplementationSTRINGTerminalRuleCall_8_0() { return cImplementationSTRINGTerminalRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class AbstractElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.sabsa.dasl.Dasl.AbstractElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInformationAssetParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cComponentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cZoneParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cNodeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cControlParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cFlowParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cImportParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//AbstractElement:
		//	InformationAsset | Component | Zone | Node | Control | Flow | Import;
		@Override public ParserRule getRule() { return rule; }
		
		//InformationAsset | Component | Zone | Node | Control | Flow | Import
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//InformationAsset
		public RuleCall getInformationAssetParserRuleCall_0() { return cInformationAssetParserRuleCall_0; }
		
		//Component
		public RuleCall getComponentParserRuleCall_1() { return cComponentParserRuleCall_1; }
		
		//Zone
		public RuleCall getZoneParserRuleCall_2() { return cZoneParserRuleCall_2; }
		
		//Node
		public RuleCall getNodeParserRuleCall_3() { return cNodeParserRuleCall_3; }
		
		//Control
		public RuleCall getControlParserRuleCall_4() { return cControlParserRuleCall_4; }
		
		//Flow
		public RuleCall getFlowParserRuleCall_5() { return cFlowParserRuleCall_5; }
		
		//Import
		public RuleCall getImportParserRuleCall_6() { return cImportParserRuleCall_6; }
	}
	
	public class NodeTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.sabsa.dasl.Dasl.NodeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPHYSICALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPHYSICALPHYSICALKeyword_0_0 = (Keyword)cPHYSICALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cVIRTUALEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cVIRTUALVIRTUALKeyword_1_0 = (Keyword)cVIRTUALEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCONTAINEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCONTAINERCONTAINERKeyword_2_0 = (Keyword)cCONTAINEREnumLiteralDeclaration_2.eContents().get(0);
		
		//enum NodeType:
		//	PHYSICAL | VIRTUAL | CONTAINER;
		public EnumRule getRule() { return rule; }
		
		//PHYSICAL | VIRTUAL | CONTAINER
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PHYSICAL
		public EnumLiteralDeclaration getPHYSICALEnumLiteralDeclaration_0() { return cPHYSICALEnumLiteralDeclaration_0; }
		
		//"PHYSICAL"
		public Keyword getPHYSICALPHYSICALKeyword_0_0() { return cPHYSICALPHYSICALKeyword_0_0; }
		
		//VIRTUAL
		public EnumLiteralDeclaration getVIRTUALEnumLiteralDeclaration_1() { return cVIRTUALEnumLiteralDeclaration_1; }
		
		//"VIRTUAL"
		public Keyword getVIRTUALVIRTUALKeyword_1_0() { return cVIRTUALVIRTUALKeyword_1_0; }
		
		//CONTAINER
		public EnumLiteralDeclaration getCONTAINEREnumLiteralDeclaration_2() { return cCONTAINEREnumLiteralDeclaration_2; }
		
		//"CONTAINER"
		public Keyword getCONTAINERCONTAINERKeyword_2_0() { return cCONTAINERCONTAINERKeyword_2_0; }
	}
	public class ControlTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.sabsa.dasl.Dasl.ControlType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cIdentityValidationEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cIdentityValidationIdentityValidationKeyword_0_0 = (Keyword)cIdentityValidationEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cUserProvisioningEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cUserProvisioningUserProvisioningKeyword_1_0 = (Keyword)cUserProvisioningEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSystemUserProvisioningEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSystemUserProvisioningSystemUserProvisioningKeyword_2_0 = (Keyword)cSystemUserProvisioningEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cIdentityTransformationEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cIdentityTransformationIdentityTransformationKeyword_3_0 = (Keyword)cIdentityTransformationEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cUserRegistriesEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cUserRegistriesUserRegistriesKeyword_4_0 = (Keyword)cUserRegistriesEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cCredentialManagementEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cCredentialManagementCredentialManagementKeyword_5_0 = (Keyword)cCredentialManagementEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cAuthenticationEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cAuthenticationAuthenticationKeyword_6_0 = (Keyword)cAuthenticationEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cAuthorisationEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cAuthorisationAuthorisationKeyword_7_0 = (Keyword)cAuthorisationEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cPrivilegeManagementEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cPrivilegeManagementPrivilegeManagementKeyword_8_0 = (Keyword)cPrivilegeManagementEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cReducedSignOnEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cReducedSignOnReducedSignOnKeyword_9_0 = (Keyword)cReducedSignOnEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cFederationEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cFederationFederationKeyword_10_0 = (Keyword)cFederationEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cAccessEntitlementGovernanceEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cAccessEntitlementGovernanceAccessEntitlementGovernanceKeyword_11_0 = (Keyword)cAccessEntitlementGovernanceEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cFirewallsNetworkEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cFirewallsNetworkFirewallsNetworkKeyword_12_0 = (Keyword)cFirewallsNetworkEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cFirewallsApplicationEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cFirewallsApplicationFirewallsApplicationKeyword_13_0 = (Keyword)cFirewallsApplicationEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cDenialofServiceEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cDenialofServiceDenialofServiceKeyword_14_0 = (Keyword)cDenialofServiceEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cNetworkAdmissionControlEnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cNetworkAdmissionControlNetworkAdmissionControlKeyword_15_0 = (Keyword)cNetworkAdmissionControlEnumLiteralDeclaration_15.eContents().get(0);
		private final EnumLiteralDeclaration cRemoteAccessGatewayEnumLiteralDeclaration_16 = (EnumLiteralDeclaration)cAlternatives.eContents().get(16);
		private final Keyword cRemoteAccessGatewayRemoteAccessGatewayKeyword_16_0 = (Keyword)cRemoteAccessGatewayEnumLiteralDeclaration_16.eContents().get(0);
		private final EnumLiteralDeclaration cIntrusionPreventionDetectionEnumLiteralDeclaration_17 = (EnumLiteralDeclaration)cAlternatives.eContents().get(17);
		private final Keyword cIntrusionPreventionDetectionIntrusionPreventionDetectionKeyword_17_0 = (Keyword)cIntrusionPreventionDetectionEnumLiteralDeclaration_17.eContents().get(0);
		private final EnumLiteralDeclaration cAntivirusEnumLiteralDeclaration_18 = (EnumLiteralDeclaration)cAlternatives.eContents().get(18);
		private final Keyword cAntivirusAntivirusKeyword_18_0 = (Keyword)cAntivirusEnumLiteralDeclaration_18.eContents().get(0);
		private final EnumLiteralDeclaration cContentFilterEnumLiteralDeclaration_19 = (EnumLiteralDeclaration)cAlternatives.eContents().get(19);
		private final Keyword cContentFilterContentFilterKeyword_19_0 = (Keyword)cContentFilterEnumLiteralDeclaration_19.eContents().get(0);
		private final EnumLiteralDeclaration cMessageSecurityEnumLiteralDeclaration_20 = (EnumLiteralDeclaration)cAlternatives.eContents().get(20);
		private final Keyword cMessageSecurityMessageSecurityKeyword_20_0 = (Keyword)cMessageSecurityEnumLiteralDeclaration_20.eContents().get(0);
		private final EnumLiteralDeclaration cTransportSecurityEnumLiteralDeclaration_21 = (EnumLiteralDeclaration)cAlternatives.eContents().get(21);
		private final Keyword cTransportSecurityTransportSecurityKeyword_21_0 = (Keyword)cTransportSecurityEnumLiteralDeclaration_21.eContents().get(0);
		private final EnumLiteralDeclaration cStoredDataSecurityEnumLiteralDeclaration_22 = (EnumLiteralDeclaration)cAlternatives.eContents().get(22);
		private final Keyword cStoredDataSecurityStoredDataSecurityKeyword_22_0 = (Keyword)cStoredDataSecurityEnumLiteralDeclaration_22.eContents().get(0);
		private final EnumLiteralDeclaration cDataLossPreventionEnumLiteralDeclaration_23 = (EnumLiteralDeclaration)cAlternatives.eContents().get(23);
		private final Keyword cDataLossPreventionDataLossPreventionKeyword_23_0 = (Keyword)cDataLossPreventionEnumLiteralDeclaration_23.eContents().get(0);
		private final EnumLiteralDeclaration cDataObfuscationEnumLiteralDeclaration_24 = (EnumLiteralDeclaration)cAlternatives.eContents().get(24);
		private final Keyword cDataObfuscationDataObfuscationKeyword_24_0 = (Keyword)cDataObfuscationEnumLiteralDeclaration_24.eContents().get(0);
		private final EnumLiteralDeclaration cDataDestructionEnumLiteralDeclaration_25 = (EnumLiteralDeclaration)cAlternatives.eContents().get(25);
		private final Keyword cDataDestructionDataDestructionKeyword_25_0 = (Keyword)cDataDestructionEnumLiteralDeclaration_25.eContents().get(0);
		private final EnumLiteralDeclaration cFraudSecurityEnumLiteralDeclaration_26 = (EnumLiteralDeclaration)cAlternatives.eContents().get(26);
		private final Keyword cFraudSecurityFraudSecurityKeyword_26_0 = (Keyword)cFraudSecurityEnumLiteralDeclaration_26.eContents().get(0);
		private final EnumLiteralDeclaration cDataTransactionSecurityEnumLiteralDeclaration_27 = (EnumLiteralDeclaration)cAlternatives.eContents().get(27);
		private final Keyword cDataTransactionSecurityDataTransactionSecurityKeyword_27_0 = (Keyword)cDataTransactionSecurityEnumLiteralDeclaration_27.eContents().get(0);
		private final EnumLiteralDeclaration cCentralisedHSM_CA_PKIEnumLiteralDeclaration_28 = (EnumLiteralDeclaration)cAlternatives.eContents().get(28);
		private final Keyword cCentralisedHSM_CA_PKICentralisedHSM_CA_PKIKeyword_28_0 = (Keyword)cCentralisedHSM_CA_PKIEnumLiteralDeclaration_28.eContents().get(0);
		private final EnumLiteralDeclaration cStandaloneEnumLiteralDeclaration_29 = (EnumLiteralDeclaration)cAlternatives.eContents().get(29);
		private final Keyword cStandaloneStandaloneKeyword_29_0 = (Keyword)cStandaloneEnumLiteralDeclaration_29.eContents().get(0);
		private final EnumLiteralDeclaration cSecurityTestingEnumLiteralDeclaration_30 = (EnumLiteralDeclaration)cAlternatives.eContents().get(30);
		private final Keyword cSecurityTestingSecurityTestingKeyword_30_0 = (Keyword)cSecurityTestingEnumLiteralDeclaration_30.eContents().get(0);
		private final EnumLiteralDeclaration cPatchManagementEnumLiteralDeclaration_31 = (EnumLiteralDeclaration)cAlternatives.eContents().get(31);
		private final Keyword cPatchManagementPatchManagementKeyword_31_0 = (Keyword)cPatchManagementEnumLiteralDeclaration_31.eContents().get(0);
		private final EnumLiteralDeclaration cVulnerabilityManagementEnumLiteralDeclaration_32 = (EnumLiteralDeclaration)cAlternatives.eContents().get(32);
		private final Keyword cVulnerabilityManagementVulnerabilityManagementKeyword_32_0 = (Keyword)cVulnerabilityManagementEnumLiteralDeclaration_32.eContents().get(0);
		private final EnumLiteralDeclaration cCentralisedReportingEnumLiteralDeclaration_33 = (EnumLiteralDeclaration)cAlternatives.eContents().get(33);
		private final Keyword cCentralisedReportingCentralisedReportingKeyword_33_0 = (Keyword)cCentralisedReportingEnumLiteralDeclaration_33.eContents().get(0);
		private final EnumLiteralDeclaration cEventCorrelationEnumLiteralDeclaration_34 = (EnumLiteralDeclaration)cAlternatives.eContents().get(34);
		private final Keyword cEventCorrelationEventCorrelationKeyword_34_0 = (Keyword)cEventCorrelationEnumLiteralDeclaration_34.eContents().get(0);
		private final EnumLiteralDeclaration cSecurityAuditLogMonitoringEnumLiteralDeclaration_35 = (EnumLiteralDeclaration)cAlternatives.eContents().get(35);
		private final Keyword cSecurityAuditLogMonitoringSecurityAuditLogMonitoringKeyword_35_0 = (Keyword)cSecurityAuditLogMonitoringEnumLiteralDeclaration_35.eContents().get(0);
		private final EnumLiteralDeclaration cComplianceTestingEnumLiteralDeclaration_36 = (EnumLiteralDeclaration)cAlternatives.eContents().get(36);
		private final Keyword cComplianceTestingComplianceTestingKeyword_36_0 = (Keyword)cComplianceTestingEnumLiteralDeclaration_36.eContents().get(0);
		private final EnumLiteralDeclaration cIncidentManagementEnumLiteralDeclaration_37 = (EnumLiteralDeclaration)cAlternatives.eContents().get(37);
		private final Keyword cIncidentManagementIncidentManagementKeyword_37_0 = (Keyword)cIncidentManagementEnumLiteralDeclaration_37.eContents().get(0);
		private final EnumLiteralDeclaration cForensicEnumLiteralDeclaration_38 = (EnumLiteralDeclaration)cAlternatives.eContents().get(38);
		private final Keyword cForensicForensicKeyword_38_0 = (Keyword)cForensicEnumLiteralDeclaration_38.eContents().get(0);
		private final EnumLiteralDeclaration cLegalEnumLiteralDeclaration_39 = (EnumLiteralDeclaration)cAlternatives.eContents().get(39);
		private final Keyword cLegalLegalKeyword_39_0 = (Keyword)cLegalEnumLiteralDeclaration_39.eContents().get(0);
		
		//enum ControlType:
		//	IdentityValidation |
		//	UserProvisioning |
		//	SystemUserProvisioning |
		//	IdentityTransformation |
		//	UserRegistries |
		//	CredentialManagement |
		//	Authentication |
		//	Authorisation |
		//	PrivilegeManagement |
		//	ReducedSignOn |
		//	Federation |
		//	AccessEntitlementGovernance |
		//	FirewallsNetwork |
		//	FirewallsApplication |
		//	DenialofService |
		//	NetworkAdmissionControl |
		//	RemoteAccessGateway |
		//	IntrusionPreventionDetection |
		//	Antivirus |
		//	ContentFilter |
		//	MessageSecurity |
		//	TransportSecurity |
		//	StoredDataSecurity |
		//	DataLossPrevention |
		//	DataObfuscation |
		//	DataDestruction |
		//	FraudSecurity |
		//	DataTransactionSecurity |
		//	CentralisedHSM_CA_PKI |
		//	Standalone |
		//	SecurityTesting |
		//	PatchManagement |
		//	VulnerabilityManagement |
		//	CentralisedReporting |
		//	EventCorrelation |
		//	SecurityAuditLogMonitoring |
		//	ComplianceTesting |
		//	IncidentManagement |
		//	Forensic |
		//	Legal;
		public EnumRule getRule() { return rule; }
		
		//IdentityValidation | UserProvisioning | SystemUserProvisioning | IdentityTransformation | UserRegistries |
		//CredentialManagement | Authentication | Authorisation | PrivilegeManagement | ReducedSignOn | Federation |
		//AccessEntitlementGovernance | FirewallsNetwork | FirewallsApplication | DenialofService | NetworkAdmissionControl |
		//RemoteAccessGateway | IntrusionPreventionDetection | Antivirus | ContentFilter | MessageSecurity | TransportSecurity |
		//StoredDataSecurity | DataLossPrevention | DataObfuscation | DataDestruction | FraudSecurity | DataTransactionSecurity |
		//CentralisedHSM_CA_PKI | Standalone | SecurityTesting | PatchManagement | VulnerabilityManagement | CentralisedReporting
		//| EventCorrelation | SecurityAuditLogMonitoring | ComplianceTesting | IncidentManagement | Forensic | Legal
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//IdentityValidation
		public EnumLiteralDeclaration getIdentityValidationEnumLiteralDeclaration_0() { return cIdentityValidationEnumLiteralDeclaration_0; }
		
		//"IdentityValidation"
		public Keyword getIdentityValidationIdentityValidationKeyword_0_0() { return cIdentityValidationIdentityValidationKeyword_0_0; }
		
		//UserProvisioning
		public EnumLiteralDeclaration getUserProvisioningEnumLiteralDeclaration_1() { return cUserProvisioningEnumLiteralDeclaration_1; }
		
		//"UserProvisioning"
		public Keyword getUserProvisioningUserProvisioningKeyword_1_0() { return cUserProvisioningUserProvisioningKeyword_1_0; }
		
		//SystemUserProvisioning
		public EnumLiteralDeclaration getSystemUserProvisioningEnumLiteralDeclaration_2() { return cSystemUserProvisioningEnumLiteralDeclaration_2; }
		
		//"SystemUserProvisioning"
		public Keyword getSystemUserProvisioningSystemUserProvisioningKeyword_2_0() { return cSystemUserProvisioningSystemUserProvisioningKeyword_2_0; }
		
		//IdentityTransformation
		public EnumLiteralDeclaration getIdentityTransformationEnumLiteralDeclaration_3() { return cIdentityTransformationEnumLiteralDeclaration_3; }
		
		//"IdentityTransformation"
		public Keyword getIdentityTransformationIdentityTransformationKeyword_3_0() { return cIdentityTransformationIdentityTransformationKeyword_3_0; }
		
		//UserRegistries
		public EnumLiteralDeclaration getUserRegistriesEnumLiteralDeclaration_4() { return cUserRegistriesEnumLiteralDeclaration_4; }
		
		//"UserRegistries"
		public Keyword getUserRegistriesUserRegistriesKeyword_4_0() { return cUserRegistriesUserRegistriesKeyword_4_0; }
		
		//CredentialManagement
		public EnumLiteralDeclaration getCredentialManagementEnumLiteralDeclaration_5() { return cCredentialManagementEnumLiteralDeclaration_5; }
		
		//"CredentialManagement"
		public Keyword getCredentialManagementCredentialManagementKeyword_5_0() { return cCredentialManagementCredentialManagementKeyword_5_0; }
		
		//Authentication
		public EnumLiteralDeclaration getAuthenticationEnumLiteralDeclaration_6() { return cAuthenticationEnumLiteralDeclaration_6; }
		
		//"Authentication"
		public Keyword getAuthenticationAuthenticationKeyword_6_0() { return cAuthenticationAuthenticationKeyword_6_0; }
		
		//Authorisation
		public EnumLiteralDeclaration getAuthorisationEnumLiteralDeclaration_7() { return cAuthorisationEnumLiteralDeclaration_7; }
		
		//"Authorisation"
		public Keyword getAuthorisationAuthorisationKeyword_7_0() { return cAuthorisationAuthorisationKeyword_7_0; }
		
		//PrivilegeManagement
		public EnumLiteralDeclaration getPrivilegeManagementEnumLiteralDeclaration_8() { return cPrivilegeManagementEnumLiteralDeclaration_8; }
		
		//"PrivilegeManagement"
		public Keyword getPrivilegeManagementPrivilegeManagementKeyword_8_0() { return cPrivilegeManagementPrivilegeManagementKeyword_8_0; }
		
		//ReducedSignOn
		public EnumLiteralDeclaration getReducedSignOnEnumLiteralDeclaration_9() { return cReducedSignOnEnumLiteralDeclaration_9; }
		
		//"ReducedSignOn"
		public Keyword getReducedSignOnReducedSignOnKeyword_9_0() { return cReducedSignOnReducedSignOnKeyword_9_0; }
		
		//Federation
		public EnumLiteralDeclaration getFederationEnumLiteralDeclaration_10() { return cFederationEnumLiteralDeclaration_10; }
		
		//"Federation"
		public Keyword getFederationFederationKeyword_10_0() { return cFederationFederationKeyword_10_0; }
		
		//AccessEntitlementGovernance
		public EnumLiteralDeclaration getAccessEntitlementGovernanceEnumLiteralDeclaration_11() { return cAccessEntitlementGovernanceEnumLiteralDeclaration_11; }
		
		//"AccessEntitlementGovernance"
		public Keyword getAccessEntitlementGovernanceAccessEntitlementGovernanceKeyword_11_0() { return cAccessEntitlementGovernanceAccessEntitlementGovernanceKeyword_11_0; }
		
		//FirewallsNetwork
		public EnumLiteralDeclaration getFirewallsNetworkEnumLiteralDeclaration_12() { return cFirewallsNetworkEnumLiteralDeclaration_12; }
		
		//"FirewallsNetwork"
		public Keyword getFirewallsNetworkFirewallsNetworkKeyword_12_0() { return cFirewallsNetworkFirewallsNetworkKeyword_12_0; }
		
		//FirewallsApplication
		public EnumLiteralDeclaration getFirewallsApplicationEnumLiteralDeclaration_13() { return cFirewallsApplicationEnumLiteralDeclaration_13; }
		
		//"FirewallsApplication"
		public Keyword getFirewallsApplicationFirewallsApplicationKeyword_13_0() { return cFirewallsApplicationFirewallsApplicationKeyword_13_0; }
		
		//DenialofService
		public EnumLiteralDeclaration getDenialofServiceEnumLiteralDeclaration_14() { return cDenialofServiceEnumLiteralDeclaration_14; }
		
		//"DenialofService"
		public Keyword getDenialofServiceDenialofServiceKeyword_14_0() { return cDenialofServiceDenialofServiceKeyword_14_0; }
		
		//NetworkAdmissionControl
		public EnumLiteralDeclaration getNetworkAdmissionControlEnumLiteralDeclaration_15() { return cNetworkAdmissionControlEnumLiteralDeclaration_15; }
		
		//"NetworkAdmissionControl"
		public Keyword getNetworkAdmissionControlNetworkAdmissionControlKeyword_15_0() { return cNetworkAdmissionControlNetworkAdmissionControlKeyword_15_0; }
		
		//RemoteAccessGateway
		public EnumLiteralDeclaration getRemoteAccessGatewayEnumLiteralDeclaration_16() { return cRemoteAccessGatewayEnumLiteralDeclaration_16; }
		
		//"RemoteAccessGateway"
		public Keyword getRemoteAccessGatewayRemoteAccessGatewayKeyword_16_0() { return cRemoteAccessGatewayRemoteAccessGatewayKeyword_16_0; }
		
		//IntrusionPreventionDetection
		public EnumLiteralDeclaration getIntrusionPreventionDetectionEnumLiteralDeclaration_17() { return cIntrusionPreventionDetectionEnumLiteralDeclaration_17; }
		
		//"IntrusionPreventionDetection"
		public Keyword getIntrusionPreventionDetectionIntrusionPreventionDetectionKeyword_17_0() { return cIntrusionPreventionDetectionIntrusionPreventionDetectionKeyword_17_0; }
		
		//Antivirus
		public EnumLiteralDeclaration getAntivirusEnumLiteralDeclaration_18() { return cAntivirusEnumLiteralDeclaration_18; }
		
		//"Antivirus"
		public Keyword getAntivirusAntivirusKeyword_18_0() { return cAntivirusAntivirusKeyword_18_0; }
		
		//ContentFilter
		public EnumLiteralDeclaration getContentFilterEnumLiteralDeclaration_19() { return cContentFilterEnumLiteralDeclaration_19; }
		
		//"ContentFilter"
		public Keyword getContentFilterContentFilterKeyword_19_0() { return cContentFilterContentFilterKeyword_19_0; }
		
		//MessageSecurity
		public EnumLiteralDeclaration getMessageSecurityEnumLiteralDeclaration_20() { return cMessageSecurityEnumLiteralDeclaration_20; }
		
		//"MessageSecurity"
		public Keyword getMessageSecurityMessageSecurityKeyword_20_0() { return cMessageSecurityMessageSecurityKeyword_20_0; }
		
		//TransportSecurity
		public EnumLiteralDeclaration getTransportSecurityEnumLiteralDeclaration_21() { return cTransportSecurityEnumLiteralDeclaration_21; }
		
		//"TransportSecurity"
		public Keyword getTransportSecurityTransportSecurityKeyword_21_0() { return cTransportSecurityTransportSecurityKeyword_21_0; }
		
		//StoredDataSecurity
		public EnumLiteralDeclaration getStoredDataSecurityEnumLiteralDeclaration_22() { return cStoredDataSecurityEnumLiteralDeclaration_22; }
		
		//"StoredDataSecurity"
		public Keyword getStoredDataSecurityStoredDataSecurityKeyword_22_0() { return cStoredDataSecurityStoredDataSecurityKeyword_22_0; }
		
		//DataLossPrevention
		public EnumLiteralDeclaration getDataLossPreventionEnumLiteralDeclaration_23() { return cDataLossPreventionEnumLiteralDeclaration_23; }
		
		//"DataLossPrevention"
		public Keyword getDataLossPreventionDataLossPreventionKeyword_23_0() { return cDataLossPreventionDataLossPreventionKeyword_23_0; }
		
		//DataObfuscation
		public EnumLiteralDeclaration getDataObfuscationEnumLiteralDeclaration_24() { return cDataObfuscationEnumLiteralDeclaration_24; }
		
		//"DataObfuscation"
		public Keyword getDataObfuscationDataObfuscationKeyword_24_0() { return cDataObfuscationDataObfuscationKeyword_24_0; }
		
		//DataDestruction
		public EnumLiteralDeclaration getDataDestructionEnumLiteralDeclaration_25() { return cDataDestructionEnumLiteralDeclaration_25; }
		
		//"DataDestruction"
		public Keyword getDataDestructionDataDestructionKeyword_25_0() { return cDataDestructionDataDestructionKeyword_25_0; }
		
		//FraudSecurity
		public EnumLiteralDeclaration getFraudSecurityEnumLiteralDeclaration_26() { return cFraudSecurityEnumLiteralDeclaration_26; }
		
		//"FraudSecurity"
		public Keyword getFraudSecurityFraudSecurityKeyword_26_0() { return cFraudSecurityFraudSecurityKeyword_26_0; }
		
		//DataTransactionSecurity
		public EnumLiteralDeclaration getDataTransactionSecurityEnumLiteralDeclaration_27() { return cDataTransactionSecurityEnumLiteralDeclaration_27; }
		
		//"DataTransactionSecurity"
		public Keyword getDataTransactionSecurityDataTransactionSecurityKeyword_27_0() { return cDataTransactionSecurityDataTransactionSecurityKeyword_27_0; }
		
		//CentralisedHSM_CA_PKI
		public EnumLiteralDeclaration getCentralisedHSM_CA_PKIEnumLiteralDeclaration_28() { return cCentralisedHSM_CA_PKIEnumLiteralDeclaration_28; }
		
		//"CentralisedHSM_CA_PKI"
		public Keyword getCentralisedHSM_CA_PKICentralisedHSM_CA_PKIKeyword_28_0() { return cCentralisedHSM_CA_PKICentralisedHSM_CA_PKIKeyword_28_0; }
		
		//Standalone
		public EnumLiteralDeclaration getStandaloneEnumLiteralDeclaration_29() { return cStandaloneEnumLiteralDeclaration_29; }
		
		//"Standalone"
		public Keyword getStandaloneStandaloneKeyword_29_0() { return cStandaloneStandaloneKeyword_29_0; }
		
		//SecurityTesting
		public EnumLiteralDeclaration getSecurityTestingEnumLiteralDeclaration_30() { return cSecurityTestingEnumLiteralDeclaration_30; }
		
		//"SecurityTesting"
		public Keyword getSecurityTestingSecurityTestingKeyword_30_0() { return cSecurityTestingSecurityTestingKeyword_30_0; }
		
		//PatchManagement
		public EnumLiteralDeclaration getPatchManagementEnumLiteralDeclaration_31() { return cPatchManagementEnumLiteralDeclaration_31; }
		
		//"PatchManagement"
		public Keyword getPatchManagementPatchManagementKeyword_31_0() { return cPatchManagementPatchManagementKeyword_31_0; }
		
		//VulnerabilityManagement
		public EnumLiteralDeclaration getVulnerabilityManagementEnumLiteralDeclaration_32() { return cVulnerabilityManagementEnumLiteralDeclaration_32; }
		
		//"VulnerabilityManagement"
		public Keyword getVulnerabilityManagementVulnerabilityManagementKeyword_32_0() { return cVulnerabilityManagementVulnerabilityManagementKeyword_32_0; }
		
		//CentralisedReporting
		public EnumLiteralDeclaration getCentralisedReportingEnumLiteralDeclaration_33() { return cCentralisedReportingEnumLiteralDeclaration_33; }
		
		//"CentralisedReporting"
		public Keyword getCentralisedReportingCentralisedReportingKeyword_33_0() { return cCentralisedReportingCentralisedReportingKeyword_33_0; }
		
		//EventCorrelation
		public EnumLiteralDeclaration getEventCorrelationEnumLiteralDeclaration_34() { return cEventCorrelationEnumLiteralDeclaration_34; }
		
		//"EventCorrelation"
		public Keyword getEventCorrelationEventCorrelationKeyword_34_0() { return cEventCorrelationEventCorrelationKeyword_34_0; }
		
		//SecurityAuditLogMonitoring
		public EnumLiteralDeclaration getSecurityAuditLogMonitoringEnumLiteralDeclaration_35() { return cSecurityAuditLogMonitoringEnumLiteralDeclaration_35; }
		
		//"SecurityAuditLogMonitoring"
		public Keyword getSecurityAuditLogMonitoringSecurityAuditLogMonitoringKeyword_35_0() { return cSecurityAuditLogMonitoringSecurityAuditLogMonitoringKeyword_35_0; }
		
		//ComplianceTesting
		public EnumLiteralDeclaration getComplianceTestingEnumLiteralDeclaration_36() { return cComplianceTestingEnumLiteralDeclaration_36; }
		
		//"ComplianceTesting"
		public Keyword getComplianceTestingComplianceTestingKeyword_36_0() { return cComplianceTestingComplianceTestingKeyword_36_0; }
		
		//IncidentManagement
		public EnumLiteralDeclaration getIncidentManagementEnumLiteralDeclaration_37() { return cIncidentManagementEnumLiteralDeclaration_37; }
		
		//"IncidentManagement"
		public Keyword getIncidentManagementIncidentManagementKeyword_37_0() { return cIncidentManagementIncidentManagementKeyword_37_0; }
		
		//Forensic
		public EnumLiteralDeclaration getForensicEnumLiteralDeclaration_38() { return cForensicEnumLiteralDeclaration_38; }
		
		//"Forensic"
		public Keyword getForensicForensicKeyword_38_0() { return cForensicForensicKeyword_38_0; }
		
		//Legal
		public EnumLiteralDeclaration getLegalEnumLiteralDeclaration_39() { return cLegalEnumLiteralDeclaration_39; }
		
		//"Legal"
		public Keyword getLegalLegalKeyword_39_0() { return cLegalLegalKeyword_39_0; }
	}
	public class ConfidentialityTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.sabsa.dasl.Dasl.ConfidentialityType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPublicEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPublicPublicKeyword_0_0 = (Keyword)cPublicEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cInternalEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cInternalInternalKeyword_1_0 = (Keyword)cInternalEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cRestrictedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cRestrictedRestrictedKeyword_2_0 = (Keyword)cRestrictedEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum ConfidentialityType:
		//	Public | Internal | Restricted;
		public EnumRule getRule() { return rule; }
		
		//Public | Internal | Restricted
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Public
		public EnumLiteralDeclaration getPublicEnumLiteralDeclaration_0() { return cPublicEnumLiteralDeclaration_0; }
		
		//"Public"
		public Keyword getPublicPublicKeyword_0_0() { return cPublicPublicKeyword_0_0; }
		
		//Internal
		public EnumLiteralDeclaration getInternalEnumLiteralDeclaration_1() { return cInternalEnumLiteralDeclaration_1; }
		
		//"Internal"
		public Keyword getInternalInternalKeyword_1_0() { return cInternalInternalKeyword_1_0; }
		
		//Restricted
		public EnumLiteralDeclaration getRestrictedEnumLiteralDeclaration_2() { return cRestrictedEnumLiteralDeclaration_2; }
		
		//"Restricted"
		public Keyword getRestrictedRestrictedKeyword_2_0() { return cRestrictedRestrictedKeyword_2_0; }
	}
	public class IntegrityTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.sabsa.dasl.Dasl.IntegrityType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAccurateEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAccurateAccurateKeyword_0_0 = (Keyword)cAccurateEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cHighlyTrustedEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cHighlyTrustedHighlyTrustedKeyword_1_0 = (Keyword)cHighlyTrustedEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cTrustedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cTrustedTrustedKeyword_2_0 = (Keyword)cTrustedEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cUncontrolledEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cUncontrolledUncontrolledKeyword_3_0 = (Keyword)cUncontrolledEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum IntegrityType:
		//	Accurate | HighlyTrusted | Trusted | Uncontrolled;
		public EnumRule getRule() { return rule; }
		
		//Accurate | HighlyTrusted | Trusted | Uncontrolled
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Accurate
		public EnumLiteralDeclaration getAccurateEnumLiteralDeclaration_0() { return cAccurateEnumLiteralDeclaration_0; }
		
		//"Accurate"
		public Keyword getAccurateAccurateKeyword_0_0() { return cAccurateAccurateKeyword_0_0; }
		
		//HighlyTrusted
		public EnumLiteralDeclaration getHighlyTrustedEnumLiteralDeclaration_1() { return cHighlyTrustedEnumLiteralDeclaration_1; }
		
		//"HighlyTrusted"
		public Keyword getHighlyTrustedHighlyTrustedKeyword_1_0() { return cHighlyTrustedHighlyTrustedKeyword_1_0; }
		
		//Trusted
		public EnumLiteralDeclaration getTrustedEnumLiteralDeclaration_2() { return cTrustedEnumLiteralDeclaration_2; }
		
		//"Trusted"
		public Keyword getTrustedTrustedKeyword_2_0() { return cTrustedTrustedKeyword_2_0; }
		
		//Uncontrolled
		public EnumLiteralDeclaration getUncontrolledEnumLiteralDeclaration_3() { return cUncontrolledEnumLiteralDeclaration_3; }
		
		//"Uncontrolled"
		public Keyword getUncontrolledUncontrolledKeyword_3_0() { return cUncontrolledUncontrolledKeyword_3_0; }
	}
	public class AvailabilityTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.sabsa.dasl.Dasl.AvailabilityType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPlatinumEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPlatinumPlatinumKeyword_0_0 = (Keyword)cPlatinumEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cGoldEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cGoldGoldKeyword_1_0 = (Keyword)cGoldEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSilverEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSilverSilverKeyword_2_0 = (Keyword)cSilverEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cBronzeEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cBronzeBronzeKeyword_3_0 = (Keyword)cBronzeEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cPlasticEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cPlasticPlasticKeyword_4_0 = (Keyword)cPlasticEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum AvailabilityType:
		//	Platinum | Gold | Silver | Bronze | Plastic;
		public EnumRule getRule() { return rule; }
		
		//Platinum | Gold | Silver | Bronze | Plastic
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Platinum
		public EnumLiteralDeclaration getPlatinumEnumLiteralDeclaration_0() { return cPlatinumEnumLiteralDeclaration_0; }
		
		//"Platinum"
		public Keyword getPlatinumPlatinumKeyword_0_0() { return cPlatinumPlatinumKeyword_0_0; }
		
		//Gold
		public EnumLiteralDeclaration getGoldEnumLiteralDeclaration_1() { return cGoldEnumLiteralDeclaration_1; }
		
		//"Gold"
		public Keyword getGoldGoldKeyword_1_0() { return cGoldGoldKeyword_1_0; }
		
		//Silver
		public EnumLiteralDeclaration getSilverEnumLiteralDeclaration_2() { return cSilverEnumLiteralDeclaration_2; }
		
		//"Silver"
		public Keyword getSilverSilverKeyword_2_0() { return cSilverSilverKeyword_2_0; }
		
		//Bronze
		public EnumLiteralDeclaration getBronzeEnumLiteralDeclaration_3() { return cBronzeEnumLiteralDeclaration_3; }
		
		//"Bronze"
		public Keyword getBronzeBronzeKeyword_3_0() { return cBronzeBronzeKeyword_3_0; }
		
		//Plastic
		public EnumLiteralDeclaration getPlasticEnumLiteralDeclaration_4() { return cPlasticEnumLiteralDeclaration_4; }
		
		//"Plastic"
		public Keyword getPlasticPlasticKeyword_4_0() { return cPlasticPlasticKeyword_4_0; }
	}
	
	private final SecurityModelElements pSecurityModel;
	private final NodeTypeElements eNodeType;
	private final QualifiedNameElements pQualifiedName;
	private final QualifiedNameWithWildcardElements pQualifiedNameWithWildcard;
	private final ImportElements pImport;
	private final ZoneElements pZone;
	private final NodeElements pNode;
	private final ComponentElements pComponent;
	private final InformationAssetElements pInformationAsset;
	private final FlowElements pFlow;
	private final ControlElements pControl;
	private final ControlTypeElements eControlType;
	private final ConfidentialityTypeElements eConfidentialityType;
	private final IntegrityTypeElements eIntegrityType;
	private final AvailabilityTypeElements eAvailabilityType;
	private final AbstractElementElements pAbstractElement;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DaslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pSecurityModel = new SecurityModelElements();
		this.eNodeType = new NodeTypeElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pQualifiedNameWithWildcard = new QualifiedNameWithWildcardElements();
		this.pImport = new ImportElements();
		this.pZone = new ZoneElements();
		this.pNode = new NodeElements();
		this.pComponent = new ComponentElements();
		this.pInformationAsset = new InformationAssetElements();
		this.pFlow = new FlowElements();
		this.pControl = new ControlElements();
		this.eControlType = new ControlTypeElements();
		this.eConfidentialityType = new ConfidentialityTypeElements();
		this.eIntegrityType = new IntegrityTypeElements();
		this.eAvailabilityType = new AvailabilityTypeElements();
		this.pAbstractElement = new AbstractElementElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.sabsa.dasl.Dasl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//// The security view of the architecture - this can be expanded to other views later.
	//SecurityModel:
	//	elements+=AbstractElement*;
	public SecurityModelElements getSecurityModelAccess() {
		return pSecurityModel;
	}
	
	public ParserRule getSecurityModelRule() {
		return getSecurityModelAccess().getRule();
	}
	
	//enum NodeType:
	//	PHYSICAL | VIRTUAL | CONTAINER;
	public NodeTypeElements getNodeTypeAccess() {
		return eNodeType;
	}
	
	public EnumRule getNodeTypeRule() {
		return getNodeTypeAccess().getRule();
	}
	
	//QualifiedName:
	//	ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//QualifiedNameWithWildcard:
	//	QualifiedName '.*'?;
	public QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return pQualifiedNameWithWildcard;
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}
	
	//Import:
	//	'import' importURI=STRING;
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	//Zone:
	//	'zone' name=ID '{'
	//	'trustLevel' trust=INT
	//	'ingress' ingressZones+=[Zone]*
	//	'egress' egressZones+=[Zone]*
	//	'nodes' nodes+=[Node]* ('controls' controls+=[Control])?
	//	'}';
	public ZoneElements getZoneAccess() {
		return pZone;
	}
	
	public ParserRule getZoneRule() {
		return getZoneAccess().getRule();
	}
	
	///** 
	//Nodes represent either a physical or virtual environment
	//upon which components are deployed too.
	//*/ Node:
	//	'node' name=ID '{'
	//	'ref' ref=ID
	//	'host' host=STRING
	//	'os' os=STRING
	//	'type' value=NodeType 'components' components+=[Component]*
	//	'}';
	public NodeElements getNodeAccess() {
		return pNode;
	}
	
	public ParserRule getNodeRule() {
		return getNodeAccess().getRule();
	}
	
	//Component:
	//	'component' name=ID '{'
	//	'ref' ref=ID
	//	'stereotype' stereotype=STRING ('vendor' vendor=STRING)?
	//	'desc' desc=STRING
	//	'version' version=STRING
	//	'assets' assets+=[InformationAsset|QualifiedName]*
	//	components+=Component*
	//	'}';
	public ComponentElements getComponentAccess() {
		return pComponent;
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}
	
	//InformationAsset:
	//	'informationasset' name=ID '{'
	//	'ref' ref=ID
	//	'desc' desc=STRING
	//	'confidentiality' confidentiality=ConfidentialityType
	//	'integrity' integrity=IntegrityType
	//	'availability' availability=AvailabilityType
	//	'}';
	public InformationAssetElements getInformationAssetAccess() {
		return pInformationAsset;
	}
	
	public ParserRule getInformationAssetRule() {
		return getInformationAssetAccess().getRule();
	}
	
	//Flow:
	//	'flow' name=ID '{'
	//	'from' from=[Component]
	//	'to' to=[Component]
	//	'informationassets' assets+=[InformationAsset|QualifiedName]*
	//	'controls' controls+=[Control]*
	//	'}';
	public FlowElements getFlowAccess() {
		return pFlow;
	}
	
	public ParserRule getFlowRule() {
		return getFlowAccess().getRule();
	}
	
	//Control:
	//	'control' name=ID '{'
	//	'ref' ref=ID
	//	'type' area=ControlType
	//	'implementation' implementation=STRING
	//	'}';
	public ControlElements getControlAccess() {
		return pControl;
	}
	
	public ParserRule getControlRule() {
		return getControlAccess().getRule();
	}
	
	//enum ControlType:
	//	IdentityValidation |
	//	UserProvisioning |
	//	SystemUserProvisioning |
	//	IdentityTransformation |
	//	UserRegistries |
	//	CredentialManagement |
	//	Authentication |
	//	Authorisation |
	//	PrivilegeManagement |
	//	ReducedSignOn |
	//	Federation |
	//	AccessEntitlementGovernance |
	//	FirewallsNetwork |
	//	FirewallsApplication |
	//	DenialofService |
	//	NetworkAdmissionControl |
	//	RemoteAccessGateway |
	//	IntrusionPreventionDetection |
	//	Antivirus |
	//	ContentFilter |
	//	MessageSecurity |
	//	TransportSecurity |
	//	StoredDataSecurity |
	//	DataLossPrevention |
	//	DataObfuscation |
	//	DataDestruction |
	//	FraudSecurity |
	//	DataTransactionSecurity |
	//	CentralisedHSM_CA_PKI |
	//	Standalone |
	//	SecurityTesting |
	//	PatchManagement |
	//	VulnerabilityManagement |
	//	CentralisedReporting |
	//	EventCorrelation |
	//	SecurityAuditLogMonitoring |
	//	ComplianceTesting |
	//	IncidentManagement |
	//	Forensic |
	//	Legal;
	public ControlTypeElements getControlTypeAccess() {
		return eControlType;
	}
	
	public EnumRule getControlTypeRule() {
		return getControlTypeAccess().getRule();
	}
	
	//enum ConfidentialityType:
	//	Public | Internal | Restricted;
	public ConfidentialityTypeElements getConfidentialityTypeAccess() {
		return eConfidentialityType;
	}
	
	public EnumRule getConfidentialityTypeRule() {
		return getConfidentialityTypeAccess().getRule();
	}
	
	//enum IntegrityType:
	//	Accurate | HighlyTrusted | Trusted | Uncontrolled;
	public IntegrityTypeElements getIntegrityTypeAccess() {
		return eIntegrityType;
	}
	
	public EnumRule getIntegrityTypeRule() {
		return getIntegrityTypeAccess().getRule();
	}
	
	//enum AvailabilityType:
	//	Platinum | Gold | Silver | Bronze | Plastic;
	public AvailabilityTypeElements getAvailabilityTypeAccess() {
		return eAvailabilityType;
	}
	
	public EnumRule getAvailabilityTypeRule() {
		return getAvailabilityTypeAccess().getRule();
	}
	
	//AbstractElement:
	//	InformationAsset | Component | Zone | Node | Control | Flow | Import;
	public AbstractElementElements getAbstractElementAccess() {
		return pAbstractElement;
	}
	
	public ParserRule getAbstractElementRule() {
		return getAbstractElementAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
