/**
 * generated by Xtext 2.12.0
 */
package org.sabsa.dasl.dasl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.sabsa.dasl.dasl.AvailabilityType;
import org.sabsa.dasl.dasl.ConfidentialityType;
import org.sabsa.dasl.dasl.DaslPackage;
import org.sabsa.dasl.dasl.InformationAsset;
import org.sabsa.dasl.dasl.IntegrityType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Information Asset</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sabsa.dasl.dasl.impl.InformationAssetImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.sabsa.dasl.dasl.impl.InformationAssetImpl#getRef <em>Ref</em>}</li>
 *   <li>{@link org.sabsa.dasl.dasl.impl.InformationAssetImpl#getDesc <em>Desc</em>}</li>
 *   <li>{@link org.sabsa.dasl.dasl.impl.InformationAssetImpl#getConfidentiality <em>Confidentiality</em>}</li>
 *   <li>{@link org.sabsa.dasl.dasl.impl.InformationAssetImpl#getIntegrity <em>Integrity</em>}</li>
 *   <li>{@link org.sabsa.dasl.dasl.impl.InformationAssetImpl#getAvailability <em>Availability</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InformationAssetImpl extends AbstractElementImpl implements InformationAsset
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getRef() <em>Ref</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRef()
   * @generated
   * @ordered
   */
  protected static final String REF_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRef() <em>Ref</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRef()
   * @generated
   * @ordered
   */
  protected String ref = REF_EDEFAULT;

  /**
   * The default value of the '{@link #getDesc() <em>Desc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDesc()
   * @generated
   * @ordered
   */
  protected static final String DESC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDesc() <em>Desc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDesc()
   * @generated
   * @ordered
   */
  protected String desc = DESC_EDEFAULT;

  /**
   * The default value of the '{@link #getConfidentiality() <em>Confidentiality</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConfidentiality()
   * @generated
   * @ordered
   */
  protected static final ConfidentialityType CONFIDENTIALITY_EDEFAULT = ConfidentialityType.PUBLIC;

  /**
   * The cached value of the '{@link #getConfidentiality() <em>Confidentiality</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConfidentiality()
   * @generated
   * @ordered
   */
  protected ConfidentialityType confidentiality = CONFIDENTIALITY_EDEFAULT;

  /**
   * The default value of the '{@link #getIntegrity() <em>Integrity</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntegrity()
   * @generated
   * @ordered
   */
  protected static final IntegrityType INTEGRITY_EDEFAULT = IntegrityType.ACCURATE;

  /**
   * The cached value of the '{@link #getIntegrity() <em>Integrity</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIntegrity()
   * @generated
   * @ordered
   */
  protected IntegrityType integrity = INTEGRITY_EDEFAULT;

  /**
   * The default value of the '{@link #getAvailability() <em>Availability</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAvailability()
   * @generated
   * @ordered
   */
  protected static final AvailabilityType AVAILABILITY_EDEFAULT = AvailabilityType.PLATINUM;

  /**
   * The cached value of the '{@link #getAvailability() <em>Availability</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAvailability()
   * @generated
   * @ordered
   */
  protected AvailabilityType availability = AVAILABILITY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InformationAssetImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DaslPackage.Literals.INFORMATION_ASSET;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DaslPackage.INFORMATION_ASSET__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getRef()
  {
    return ref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRef(String newRef)
  {
    String oldRef = ref;
    ref = newRef;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DaslPackage.INFORMATION_ASSET__REF, oldRef, ref));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDesc()
  {
    return desc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDesc(String newDesc)
  {
    String oldDesc = desc;
    desc = newDesc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DaslPackage.INFORMATION_ASSET__DESC, oldDesc, desc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConfidentialityType getConfidentiality()
  {
    return confidentiality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConfidentiality(ConfidentialityType newConfidentiality)
  {
    ConfidentialityType oldConfidentiality = confidentiality;
    confidentiality = newConfidentiality == null ? CONFIDENTIALITY_EDEFAULT : newConfidentiality;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DaslPackage.INFORMATION_ASSET__CONFIDENTIALITY, oldConfidentiality, confidentiality));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IntegrityType getIntegrity()
  {
    return integrity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIntegrity(IntegrityType newIntegrity)
  {
    IntegrityType oldIntegrity = integrity;
    integrity = newIntegrity == null ? INTEGRITY_EDEFAULT : newIntegrity;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DaslPackage.INFORMATION_ASSET__INTEGRITY, oldIntegrity, integrity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AvailabilityType getAvailability()
  {
    return availability;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAvailability(AvailabilityType newAvailability)
  {
    AvailabilityType oldAvailability = availability;
    availability = newAvailability == null ? AVAILABILITY_EDEFAULT : newAvailability;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DaslPackage.INFORMATION_ASSET__AVAILABILITY, oldAvailability, availability));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DaslPackage.INFORMATION_ASSET__NAME:
        return getName();
      case DaslPackage.INFORMATION_ASSET__REF:
        return getRef();
      case DaslPackage.INFORMATION_ASSET__DESC:
        return getDesc();
      case DaslPackage.INFORMATION_ASSET__CONFIDENTIALITY:
        return getConfidentiality();
      case DaslPackage.INFORMATION_ASSET__INTEGRITY:
        return getIntegrity();
      case DaslPackage.INFORMATION_ASSET__AVAILABILITY:
        return getAvailability();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DaslPackage.INFORMATION_ASSET__NAME:
        setName((String)newValue);
        return;
      case DaslPackage.INFORMATION_ASSET__REF:
        setRef((String)newValue);
        return;
      case DaslPackage.INFORMATION_ASSET__DESC:
        setDesc((String)newValue);
        return;
      case DaslPackage.INFORMATION_ASSET__CONFIDENTIALITY:
        setConfidentiality((ConfidentialityType)newValue);
        return;
      case DaslPackage.INFORMATION_ASSET__INTEGRITY:
        setIntegrity((IntegrityType)newValue);
        return;
      case DaslPackage.INFORMATION_ASSET__AVAILABILITY:
        setAvailability((AvailabilityType)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DaslPackage.INFORMATION_ASSET__NAME:
        setName(NAME_EDEFAULT);
        return;
      case DaslPackage.INFORMATION_ASSET__REF:
        setRef(REF_EDEFAULT);
        return;
      case DaslPackage.INFORMATION_ASSET__DESC:
        setDesc(DESC_EDEFAULT);
        return;
      case DaslPackage.INFORMATION_ASSET__CONFIDENTIALITY:
        setConfidentiality(CONFIDENTIALITY_EDEFAULT);
        return;
      case DaslPackage.INFORMATION_ASSET__INTEGRITY:
        setIntegrity(INTEGRITY_EDEFAULT);
        return;
      case DaslPackage.INFORMATION_ASSET__AVAILABILITY:
        setAvailability(AVAILABILITY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DaslPackage.INFORMATION_ASSET__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case DaslPackage.INFORMATION_ASSET__REF:
        return REF_EDEFAULT == null ? ref != null : !REF_EDEFAULT.equals(ref);
      case DaslPackage.INFORMATION_ASSET__DESC:
        return DESC_EDEFAULT == null ? desc != null : !DESC_EDEFAULT.equals(desc);
      case DaslPackage.INFORMATION_ASSET__CONFIDENTIALITY:
        return confidentiality != CONFIDENTIALITY_EDEFAULT;
      case DaslPackage.INFORMATION_ASSET__INTEGRITY:
        return integrity != INTEGRITY_EDEFAULT;
      case DaslPackage.INFORMATION_ASSET__AVAILABILITY:
        return availability != AVAILABILITY_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", ref: ");
    result.append(ref);
    result.append(", desc: ");
    result.append(desc);
    result.append(", confidentiality: ");
    result.append(confidentiality);
    result.append(", integrity: ");
    result.append(integrity);
    result.append(", availability: ");
    result.append(availability);
    result.append(')');
    return result.toString();
  }

} //InformationAssetImpl
