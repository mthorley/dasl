/**
 * generated by Xtext 2.19.0
 */
package org.sabsa.dasl.dasl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.sabsa.dasl.dasl.Component;
import org.sabsa.dasl.dasl.Control;
import org.sabsa.dasl.dasl.DaslPackage;
import org.sabsa.dasl.dasl.InformationAsset;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Component</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sabsa.dasl.dasl.impl.ComponentImpl#getRef <em>Ref</em>}</li>
 *   <li>{@link org.sabsa.dasl.dasl.impl.ComponentImpl#getStereotype <em>Stereotype</em>}</li>
 *   <li>{@link org.sabsa.dasl.dasl.impl.ComponentImpl#getVendor <em>Vendor</em>}</li>
 *   <li>{@link org.sabsa.dasl.dasl.impl.ComponentImpl#getDesc <em>Desc</em>}</li>
 *   <li>{@link org.sabsa.dasl.dasl.impl.ComponentImpl#getVersion <em>Version</em>}</li>
 *   <li>{@link org.sabsa.dasl.dasl.impl.ComponentImpl#getAssets <em>Assets</em>}</li>
 *   <li>{@link org.sabsa.dasl.dasl.impl.ComponentImpl#getControls <em>Controls</em>}</li>
 *   <li>{@link org.sabsa.dasl.dasl.impl.ComponentImpl#getComponents <em>Components</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComponentImpl extends AbstractElementImpl implements Component
{
  /**
   * The default value of the '{@link #getRef() <em>Ref</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRef()
   * @generated
   * @ordered
   */
  protected static final String REF_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRef() <em>Ref</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRef()
   * @generated
   * @ordered
   */
  protected String ref = REF_EDEFAULT;

  /**
   * The default value of the '{@link #getStereotype() <em>Stereotype</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStereotype()
   * @generated
   * @ordered
   */
  protected static final String STEREOTYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStereotype() <em>Stereotype</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStereotype()
   * @generated
   * @ordered
   */
  protected String stereotype = STEREOTYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getVendor() <em>Vendor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVendor()
   * @generated
   * @ordered
   */
  protected static final String VENDOR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVendor() <em>Vendor</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVendor()
   * @generated
   * @ordered
   */
  protected String vendor = VENDOR_EDEFAULT;

  /**
   * The default value of the '{@link #getDesc() <em>Desc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDesc()
   * @generated
   * @ordered
   */
  protected static final String DESC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDesc() <em>Desc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDesc()
   * @generated
   * @ordered
   */
  protected String desc = DESC_EDEFAULT;

  /**
   * The default value of the '{@link #getVersion() <em>Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected static final String VERSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVersion() <em>Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVersion()
   * @generated
   * @ordered
   */
  protected String version = VERSION_EDEFAULT;

  /**
   * The cached value of the '{@link #getAssets() <em>Assets</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAssets()
   * @generated
   * @ordered
   */
  protected EList<InformationAsset> assets;

  /**
   * The cached value of the '{@link #getControls() <em>Controls</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getControls()
   * @generated
   * @ordered
   */
  protected EList<Control> controls;

  /**
   * The cached value of the '{@link #getComponents() <em>Components</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComponents()
   * @generated
   * @ordered
   */
  protected EList<Component> components;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComponentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DaslPackage.Literals.COMPONENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRef()
  {
    return ref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRef(String newRef)
  {
    String oldRef = ref;
    ref = newRef;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DaslPackage.COMPONENT__REF, oldRef, ref));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStereotype()
  {
    return stereotype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStereotype(String newStereotype)
  {
    String oldStereotype = stereotype;
    stereotype = newStereotype;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DaslPackage.COMPONENT__STEREOTYPE, oldStereotype, stereotype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVendor()
  {
    return vendor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVendor(String newVendor)
  {
    String oldVendor = vendor;
    vendor = newVendor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DaslPackage.COMPONENT__VENDOR, oldVendor, vendor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDesc()
  {
    return desc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDesc(String newDesc)
  {
    String oldDesc = desc;
    desc = newDesc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DaslPackage.COMPONENT__DESC, oldDesc, desc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVersion()
  {
    return version;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVersion(String newVersion)
  {
    String oldVersion = version;
    version = newVersion;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DaslPackage.COMPONENT__VERSION, oldVersion, version));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<InformationAsset> getAssets()
  {
    if (assets == null)
    {
      assets = new EObjectResolvingEList<InformationAsset>(InformationAsset.class, this, DaslPackage.COMPONENT__ASSETS);
    }
    return assets;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Control> getControls()
  {
    if (controls == null)
    {
      controls = new EObjectResolvingEList<Control>(Control.class, this, DaslPackage.COMPONENT__CONTROLS);
    }
    return controls;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Component> getComponents()
  {
    if (components == null)
    {
      components = new EObjectContainmentEList<Component>(Component.class, this, DaslPackage.COMPONENT__COMPONENTS);
    }
    return components;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DaslPackage.COMPONENT__COMPONENTS:
        return ((InternalEList<?>)getComponents()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DaslPackage.COMPONENT__REF:
        return getRef();
      case DaslPackage.COMPONENT__STEREOTYPE:
        return getStereotype();
      case DaslPackage.COMPONENT__VENDOR:
        return getVendor();
      case DaslPackage.COMPONENT__DESC:
        return getDesc();
      case DaslPackage.COMPONENT__VERSION:
        return getVersion();
      case DaslPackage.COMPONENT__ASSETS:
        return getAssets();
      case DaslPackage.COMPONENT__CONTROLS:
        return getControls();
      case DaslPackage.COMPONENT__COMPONENTS:
        return getComponents();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DaslPackage.COMPONENT__REF:
        setRef((String)newValue);
        return;
      case DaslPackage.COMPONENT__STEREOTYPE:
        setStereotype((String)newValue);
        return;
      case DaslPackage.COMPONENT__VENDOR:
        setVendor((String)newValue);
        return;
      case DaslPackage.COMPONENT__DESC:
        setDesc((String)newValue);
        return;
      case DaslPackage.COMPONENT__VERSION:
        setVersion((String)newValue);
        return;
      case DaslPackage.COMPONENT__ASSETS:
        getAssets().clear();
        getAssets().addAll((Collection<? extends InformationAsset>)newValue);
        return;
      case DaslPackage.COMPONENT__CONTROLS:
        getControls().clear();
        getControls().addAll((Collection<? extends Control>)newValue);
        return;
      case DaslPackage.COMPONENT__COMPONENTS:
        getComponents().clear();
        getComponents().addAll((Collection<? extends Component>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DaslPackage.COMPONENT__REF:
        setRef(REF_EDEFAULT);
        return;
      case DaslPackage.COMPONENT__STEREOTYPE:
        setStereotype(STEREOTYPE_EDEFAULT);
        return;
      case DaslPackage.COMPONENT__VENDOR:
        setVendor(VENDOR_EDEFAULT);
        return;
      case DaslPackage.COMPONENT__DESC:
        setDesc(DESC_EDEFAULT);
        return;
      case DaslPackage.COMPONENT__VERSION:
        setVersion(VERSION_EDEFAULT);
        return;
      case DaslPackage.COMPONENT__ASSETS:
        getAssets().clear();
        return;
      case DaslPackage.COMPONENT__CONTROLS:
        getControls().clear();
        return;
      case DaslPackage.COMPONENT__COMPONENTS:
        getComponents().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DaslPackage.COMPONENT__REF:
        return REF_EDEFAULT == null ? ref != null : !REF_EDEFAULT.equals(ref);
      case DaslPackage.COMPONENT__STEREOTYPE:
        return STEREOTYPE_EDEFAULT == null ? stereotype != null : !STEREOTYPE_EDEFAULT.equals(stereotype);
      case DaslPackage.COMPONENT__VENDOR:
        return VENDOR_EDEFAULT == null ? vendor != null : !VENDOR_EDEFAULT.equals(vendor);
      case DaslPackage.COMPONENT__DESC:
        return DESC_EDEFAULT == null ? desc != null : !DESC_EDEFAULT.equals(desc);
      case DaslPackage.COMPONENT__VERSION:
        return VERSION_EDEFAULT == null ? version != null : !VERSION_EDEFAULT.equals(version);
      case DaslPackage.COMPONENT__ASSETS:
        return assets != null && !assets.isEmpty();
      case DaslPackage.COMPONENT__CONTROLS:
        return controls != null && !controls.isEmpty();
      case DaslPackage.COMPONENT__COMPONENTS:
        return components != null && !components.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (ref: ");
    result.append(ref);
    result.append(", stereotype: ");
    result.append(stereotype);
    result.append(", vendor: ");
    result.append(vendor);
    result.append(", desc: ");
    result.append(desc);
    result.append(", version: ");
    result.append(version);
    result.append(')');
    return result.toString();
  }

} //ComponentImpl
