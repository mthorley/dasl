/*
 * generated by Xtext 2.12.0
 */
package org.sabsa.dasl.ui.labeling

import com.google.inject.Inject
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider
import org.sabsa.dasl.dasl.Node
import org.sabsa.dasl.dasl.Component
import org.sabsa.dasl.dasl.InformationAsset
import org.sabsa.dasl.dasl.Control
import org.sabsa.dasl.dasl.Flow
import org.sabsa.dasl.dasl.BaseControl

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class DaslLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// Labels and icons can be computed like this:
	
	def text(Node node) {
		'[' + node.ref + '] ' + node.name
	}
	
	def text(Component component) {
		'[' + component.ref + '] ' + component.name
	}
	
	def text(InformationAsset ia) {
		'[' + ia.ref + '] ' + ia.name		
	}

	def text(Control c) {
		'[' + c.ref + '] ' + c.name		
	}
 	
	def text(Flow f) {
		'[' + f.name + '] ' + f.desc		
	}
	
	def text(BaseControl bc) {
		'[' + bc.name + ']' + bc.title
	}

//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//
//	def image(Greeting ele) {
//		'Greeting.gif'
//	}
}
